options(dplyr.summarise.inform = FALSE)
library(bayesplot)
# install.packages("countreg",repos = "http://R-Forge.R-project.org")
library(countreg)
library(rmutil)
library(actuar)
library(SPEI)
library(LaplacesDemon)
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("scater")
library(scater)
poar_allsites <- read.csv("https://www.dropbox.com/s/xk4225mn8btqhbm/demography_allsites.csv?dl=1", stringsAsFactors = F)#common garden data
poar_allsites$census.year<-poar_allsites$year-1 #Add census year to match with climate data
poar_allsites %>%
dplyr::select(everything()) %>%
filter(census.year %in% (2015:2016))-> poar_allsites_2015_2016 # Drop the first census to match with the seasonal model (growing and dormant season temp and precip)
viabVr <- read.csv("https://www.dropbox.com/s/jfkgoxgv8o1fgqx/viability.csv?dl=1") #seed viability and germination
poar_ppt <- read.csv("https://www.dropbox.com/s/kkga2hf9k1w9ht1/Poa_pr.csv?dl=1", stringsAsFactors = F) # monthly  precipitation
poar_temp <- read.csv("https://www.dropbox.com/s/n0vrn8q5ma49rc9/Poa_tas.csv?dl=1", stringsAsFactors = F) # monthly temperature)
poar_ppt$census.year<-ifelse(poar_ppt$month<5,poar_ppt$year-1,poar_ppt$year) # data were collected in May. Thus, the precipitation for the census year is both the precipitation from May to December of the previous year and precipitation of the current year.
poar_temp$census.year<-ifelse(poar_temp$month<5,poar_temp$year-1,poar_temp$year)
poar_ppt %>%
dplyr::select(Longitude, Latitude, census.year, ppt,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_ppt=sum(ppt),sd_ppt=sd(ppt),cv_ppt=sd_ppt/mean_ppt,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_pptann
poar_temp %>%
dplyr::select(Longitude, Latitude, census.year, temp,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_temp = mean(temp),sd_temp=sd(temp),cv_temp=sd_temp/mean_temp,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_tempann
poar_climann<- merge(x = poar_pptann, y = poar_tempann) # merge temperature and precipitation data
poar_allsites.clim <- left_join(x = poar_allsites_2015_2016 ,y =poar_climann,by=c("site","census.year","Longitude","Latitude")) # merge the demographic data with climatic data for each site
names(poar_allsites.clim)
# Survival
poar_allsites.clim %>%
subset( tillerN_t0 > 0 )%>%
dplyr::select( year, Code, site, Block, Sex,
Longitude, Latitude,
tillerN_t0, surv_t1,mean_ppt,cv_ppt,mean_temp,site)%>%
na.omit %>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
mutate( z_size_t0   = tillerN_t0 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.surv
# growth
poar_allsites.clim %>%
subset( tillerN_t0 > 0 & tillerN_t1 > 0)%>%
dplyr::select( year, Code, site, Block, Sex,
Longitude, Latitude,
tillerN_t0, tillerN_t1,surv_t1,mean_ppt,cv_ppt,mean_temp,site)%>%
na.omit %>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
mutate( z_size_t0   = tillerN_t0 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.grow
# flowering
poar_allsites.clim %>%
subset( tillerN_t1 > 0 )%>%
dplyr::select( year, Code, site, Block, Sex,
Longitude, Latitude,
tillerN_t1, flowerN_t1,flow_t1,mean_ppt,cv_ppt,mean_temp,site)%>%
na.omit %>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
mutate( z_size_t1   = tillerN_t1 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.flow
# Panicles
poar_allsites.clim %>%
subset( flowerN_t1 > 0 & tillerN_t1 > 0 )%>%
dplyr::select( year, Code, site, Block, Sex,
Longitude, Latitude,
tillerN_t1, flowerN_t1,mean_ppt,cv_ppt,mean_temp,site)%>%
na.omit %>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric,
panic_t1 = flowerN_t1) %>%
mutate( z_size_t1   = tillerN_t1 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.panic
# seed viability
viabVr %>%
dplyr::select( plot, totS, yesMaybe, sr_f ) %>%
dplyr::rename( SR        = sr_f,
y_viab = yesMaybe,
tot_seeds_viab = totS) %>%
dplyr::select(y_viab, tot_seeds_viab, SR ) %>%
na.omit->viab
# seed germination
viabVr %>%
dplyr::select( plot, germTot, germFail, sr_f ) %>%
dplyr::rename( SR        = sr_f,
y_germ    = germTot ) %>%
mutate(tot_seeds_germ = y_germ + germFail ) %>%
dplyr::select(y_germ, tot_seeds_germ, SR ) %>%
na.omit->germ
# seeds per panicle
viabVr %>%
dplyr::select(SeedN)  %>%
na.omit->seeds
data_allsites <- list( n_sites    = poar_allsites.surv$site %>% n_distinct,
n_sources  = poar_allsites.surv$source %>% n_distinct(),
# survival data
n_blocks_s = poar_allsites.surv$Block %>% n_distinct,
site_s   = poar_allsites.surv$site,
source_s =  poar_allsites.surv$source,
block_s  = poar_allsites.surv$Block,
ppt_s=poar_allsites.surv$z_ppt_t1_z,
cvppt_s=poar_allsites.surv$z_cvppt_t1_z,
temp_s=poar_allsites.surv$z_temp_t1_z,
site_block_s = data.frame( site_i  = poar_allsites.surv$site,
block_i = poar_allsites.surv$Block ) %>%
unique %>% .$site_i,
male_s   = poar_allsites.surv$Sex-1,
size_s   = poar_allsites.surv$z_size_t0,
y_s      = poar_allsites.surv$surv_t1,
n_s      = nrow(poar_allsites.surv),
# growth data
n_blocks_g = poar_allsites.grow$Block %>% n_distinct,
site_g   = poar_allsites.grow$site,
source_g =  poar_allsites.grow$source,
block_g  = poar_allsites.grow$Block,
ppt_g=poar_allsites.grow$z_ppt_t1_z,
cvppt_g=poar_allsites.grow$z_cvppt_t1_z,
temp_g=poar_allsites.grow$z_temp_t1_z,
site_block_g = data.frame( site_i  = poar_allsites.grow$site,
block_i = poar_allsites.grow$Block ) %>%
unique %>% .$site_i,
male_g   = poar_allsites.grow$Sex-1,
size_g   = poar_allsites.grow$z_size_t0,
y_g      = poar_allsites.grow$tillerN_t1,
n_g      = nrow(poar_allsites.grow),
# flowering data
n_blocks_f = poar_allsites.flow$Block %>% n_distinct,
site_f   = poar_allsites.flow$site,
source_f =  poar_allsites.flow$source,
block_f  = poar_allsites.flow$Block,
ppt_f=poar_allsites.flow$z_ppt_t1_z,
cvppt_f=poar_allsites.flow$z_cvppt_t1_z,
temp_f=poar_allsites.flow$z_temp_t1_z,
site_block_f = data.frame( site_i  = poar_allsites.flow$site,
block_i = poar_allsites.flow$Block ) %>%
unique %>% .$site_i,
male_f   = poar_allsites.flow$Sex-1,
size_f   = poar_allsites.flow$z_size_t1,
y_f      = poar_allsites.flow$flow_t1,
n_f      = nrow(poar_allsites.flow),
# panicle data
n_blocks_p = poar_allsites.panic$Block %>% n_distinct,
site_p   = poar_allsites.panic$site,
source_p =  poar_allsites.panic$source,
block_p  = poar_allsites.panic$Block,
ppt_p=poar_allsites.panic$z_ppt_t1_z,
cvppt_p=poar_allsites.panic$z_cvppt_t1_z,
temp_p=poar_allsites.panic$z_temp_t1_z,
site_block_p = data.frame( site_i  = poar_allsites.panic$site,
block_i = poar_allsites.panic$Block ) %>%
unique %>% .$site_i,
male_p   = poar_allsites.panic$Sex-1,
size_p   = poar_allsites.panic$z_size_t1,
y_p      = poar_allsites.panic$panic_t1,
n_p      = nrow(poar_allsites.panic),
# viability
n_v       = nrow(viab),
y_v       = viab$y_viab,
tot_seeds_v = viab$tot_seeds_viab,
SR_v        = viab$SR,
# germination
n_m       = nrow(germ),
y_m       = germ$y_germ,
tot_seeds_m = germ$tot_seeds_germ,
SR_m        = germ$SR,
# seeds per panicle
n_d = nrow(seeds),
y_d = seeds$SeedN)
#load stan output: this will also take a while, but not as long as running the model from scratch
fit_allsites_full_annual <- readRDS(url("https://www.dropbox.com/s/3as6uzej386voyi/poar_vitalrate.rds?dl=1"))
#ignore warning from readRDS
poar <- poar_allsites
## Survival
poar_allsites.surv %>%
group_by(site,Sex) %>%
summarise(mean_size = mean(z_size_t0),
mean_surv = mean(surv_t1),
ppt = unique(mean_ppt),
mean_ppt= mean(mean_ppt),
temp = unique(mean_temp),
mean_temp= mean(mean_temp),
cv_ppt=unique(cv_ppt),
mean_cv_ppt=mean(cv_ppt))->poar_surv_plot
surv_mean_sizes <- poar_surv_plot %>% group_by(Sex) %>% summarise(size = mean(mean_size))
surv_mean_temp <- poar_surv_plot %>% group_by(Sex) %>% summarise(temp = mean(mean_temp))
surv_mean_ppt <- poar_surv_plot %>% group_by(Sex) %>% summarise(ppt = mean(mean_ppt))
surv_mean_cv_ppt <- poar_surv_plot %>% group_by(Sex) %>% summarise(cv_ppt = mean(cv_ppt))
## Growth
poar_allsites.grow %>%
group_by(site,Sex) %>%
summarise(mean_size = mean(z_size_t0),
mean_grow = mean(tillerN_t1),
ppt = unique(mean_ppt),
mean_ppt= mean(mean_ppt),
temp = unique(mean_temp),
mean_temp= mean(mean_temp),
cv_ppt=unique(cv_ppt),
mean_cv_ppt=mean(cv_ppt),
)->poar_grow_plot
grow_mean_sizes <- poar_grow_plot %>% group_by(Sex) %>% summarise(size = mean(mean_size))
grow_mean_temp <- poar_grow_plot %>% group_by(Sex) %>% summarise(temp = mean(mean_temp))
grow_mean_ppt <- poar_grow_plot %>% group_by(Sex) %>% summarise(ppt = mean(mean_ppt))
grow_mean_cv_ppt <- poar_grow_plot %>% group_by(Sex) %>% summarise(cv_ppt = mean(cv_ppt))
## Flowering
poar_allsites.flow %>%
group_by(site,Sex) %>%
summarise(mean_size = mean(z_size_t1),
mean_flow = mean(flow_t1),
ppt = unique(mean_ppt),
mean_ppt= mean(mean_ppt),
temp = unique(mean_temp),
mean_temp= mean(mean_temp),
cv_ppt=unique(cv_ppt),
mean_cv_ppt=mean(cv_ppt))->poar_flow_plot
flow_mean_sizes <- poar_flow_plot %>% group_by(Sex) %>% summarise(size = mean(mean_size))
flow_mean_temp <- poar_flow_plot %>% group_by(Sex) %>% summarise(temp = mean(mean_temp))
flow_mean_ppt <- poar_flow_plot %>% group_by(Sex) %>% summarise(ppt = mean(mean_ppt))
flow_mean_cv_ppt <- poar_flow_plot %>% group_by(Sex) %>% summarise(cv_ppt = mean(cv_ppt))
## Panicles
poar_allsites.panic %>%
group_by(site,Sex) %>%
summarise(mean_size = mean(z_size_t1),
mean_panic = mean(panic_t1),
ppt = unique(mean_ppt),
mean_ppt= mean(mean_ppt),
temp = unique(mean_temp),
mean_temp= mean(mean_temp),
cv_ppt=unique(cv_ppt),
mean_cv_ppt=mean(cv_ppt))->poar_panic_plot
panic_mean_sizes <- poar_panic_plot %>% group_by(Sex) %>% summarise(size = mean(mean_size))
panic_mean_temp <- poar_panic_plot %>% group_by(Sex) %>% summarise(temp = mean(mean_temp))
panic_mean_ppt <- poar_panic_plot %>% group_by(Sex) %>% summarise(ppt = mean(mean_ppt))
panic_mean_cv_ppt <- poar_panic_plot %>% group_by(Sex) %>% summarise(cv_ppt = mean(mean_cv_ppt))
fit_full <- fit_allsites_full_annual
surv_coef <- rstan::extract(fit_full, pars = c("b0_s", "bsize_s","bsex_s","bppt_s","btemp_s","bcvppt_s","bpptsex_s","btempsex_s","bcvpptsex_s","bppttempsex_s","block_tau_s","source_tau_s","site_tau_s"))
grow_coef <- rstan::extract(fit_full, pars = c("b0_g", "bsize_g","bsex_g","bppt_g","btemp_g","bcvppt_g","bpptsex_g","btempsex_g","bcvpptsex_g","bppttempsex_g","block_tau_g","source_tau_g","site_tau_g"))
flow_coef <- rstan::extract(fit_full, pars = c("b0_f", "bsize_f","bsex_f","bppt_f","btemp_f","bcvppt_f","bpptsex_f","btempsex_f","bcvpptsex_f","bppttempsex_f","block_tau_f","source_tau_f","site_tau_f"))
panic_coef <- rstan::extract(fit_full, pars = c("b0_p", "bsize_p","bsex_p","bppt_p","btemp_p","bcvppt_p","bpptsex_p","btempsex_p","bcvpptsex_p","bppttempsex_p","block_tau_p","source_tau_p","site_tau_p"))
plot(fit_full,pars  = c("b0_s", "bsize_s","bsex_s","bppt_s","btemp_s","bcvppt_s","bpptsex_s","btempsex_s","bcvpptsex_s","bppttempsex_s","b0_g", "bsize_g","bsex_g","bppt_g","btemp_g","bcvppt_g","bpptsex_g","btempsex_g","bcvpptsex_g","bppttempsex_g","b0_p", "bsize_p","bsex_p","bppt_p","btemp_p","bcvppt_p","bpptsex_p","btempsex_p","bcvpptsex_p","bppttempsex_p","b0_f", "bsize_f","bsex_f","bppt_f","btemp_f","bcvppt_f","bpptsex_f","btempsex_f","bcvpptsex_f","bppttempsex_f"))+ geom_vline(xintercept = 0, linetype = 2)
posteriorannual <- as.array(fit_allsites_full_annual)
color_scheme_set("blue")
mcmc_intervals(posteriorannual, pars = c("b0_s", "bsize_s","bsex_s","bppt_s","btemp_s","bcvppt_s","bpptsex_s","btempsex_s","bcvpptsex_s","bppttempsex_s","b0_g", "bsize_g","bsex_g","bppt_g","btemp_g","bcvppt_g","bpptsex_g","btempsex_g","bcvpptsex_g","bppttempsex_g","b0_p", "bsize_p","bsex_p","bppt_p","btemp_p","bcvppt_p","bpptsex_p","btempsex_p","bcvpptsex_p","bppttempsex_p","b0_f", "bsize_f","bsex_f","bppt_f","btemp_f","bcvppt_f","bpptsex_f","btempsex_f","bcvpptsex_f","bppttempsex_f"))+ geom_vline(xintercept = 0, linetype = 2)+theme_bw()
fit_full <- fit_allsites_full_annual
surv_coef <- rstan::extract(fit_full, pars = c("b0_s", "bsize_s","bsex_s","bppt_s","btemp_s","bcvppt_s","bpptsex_s","btempsex_s","bcvpptsex_s","bppttempsex_s","block_tau_s","source_tau_s","site_tau_s"))
grow_coef <- rstan::extract(fit_full, pars = c("b0_g", "bsize_g","bsex_g","bppt_g","btemp_g","bcvppt_g","bpptsex_g","btempsex_g","bcvpptsex_g","bppttempsex_g","block_tau_g","source_tau_g","site_tau_g"))
flow_coef <- rstan::extract(fit_full, pars = c("b0_f", "bsize_f","bsex_f","bppt_f","btemp_f","bcvppt_f","bpptsex_f","btempsex_f","bcvpptsex_f","bppttempsex_f","block_tau_f","source_tau_f","site_tau_f"))
panic_coef <- rstan::extract(fit_full, pars = c("b0_p", "bsize_p","bsex_p","bppt_p","btemp_p","bcvppt_p","bpptsex_p","btempsex_p","bcvpptsex_p","bppttempsex_p","block_tau_p","source_tau_p","site_tau_p"))
plot(fit_full,pars  = c("b0_s", "bsize_s","bsex_s","bppt_s","btemp_s","bcvppt_s","bpptsex_s","btempsex_s","bcvpptsex_s","bppttempsex_s","b0_g", "bsize_g","bsex_g","bppt_g","btemp_g","bcvppt_g","bpptsex_g","btempsex_g","bcvpptsex_g","bppttempsex_g","b0_p", "bsize_p","bsex_p","bppt_p","btemp_p","bcvppt_p","bpptsex_p","btempsex_p","bcvpptsex_p","bppttempsex_p","b0_f", "bsize_f","bsex_f","bppt_f","btemp_f","bcvppt_f","bpptsex_f","btempsex_f","bcvpptsex_f","bppttempsex_f"))+ geom_vline(xintercept = 0, linetype = 2)
poar_surv_plot$scaled_temp <- scale(poar_surv_plot$temp)
poar_surv_plot$scaled_ppt <- scale(poar_surv_plot$ppt)
ppt_seq <- seq(min(poar_surv_plot$scaled_ppt),max(poar_surv_plot$scaled_ppt),0.1)
poar_surv_plot$scaled_temp <- scale(poar_surv_plot$temp)
temp_seq <- seq(min(poar_surv_plot$scaled_temp),max(poar_surv_plot$scaled_temp),0.1)
poar_surv_plot$scaled_cvppt <- scale(poar_surv_plot$cv_ppt)
cvppt_seq <- seq(min(poar_surv_plot$scaled_cvppt),max(poar_surv_plot$scaled_cvppt),0.1)
for(s in 1:2){
SV<-invlogit(mean(surv_coef$b0_s) +
mean(surv_coef$bsize_s) * surv_mean_sizes$size[surv_mean_sizes$Sex==s] +
mean(surv_coef$bsex_s) * (s-1) +
mean(surv_coef$bppt_s) * ppt_seq +
mean(surv_coef$btemp_s) * surv_mean_temp$temp[surv_mean_temp$Sex==s] +
mean(surv_coef$bcvppt_s) * surv_mean_cv_ppt$cv_ppt[surv_mean_cv_ppt$Sex==s] +
mean(surv_coef$bpptsex_s) * ppt_seq * (s-1) +
mean(surv_coef$btempsex_s) * surv_mean_temp$temp[surv_mean_temp$Sex==s] * (s-1) +
mean(surv_coef$bcvpptsex_s) * surv_mean_cv_ppt$cv_ppt[surv_mean_cv_ppt$Sex==s] * (s-1) +
mean(surv_coef$bppttempsex_s) * ppt_seq * surv_mean_temp$temp[surv_mean_temp$Sex==s] * surv_mean_cv_ppt$cv_ppt[surv_mean_cv_ppt$Sex==s] * (s-1)
)
print(SV)
}
sex_cols <- c("#FDAE61","#66BD63")
# sex_lty <- c(1,2)
with(poar_surv_plot,{
par(mar=c(2,4,1,0))
plot(scaled_ppt,mean_surv,ylim=c(0,1),
xlab=" Precipitation",ylab=" Pr Survival");box()
for(s in 1:2){
points(scaled_ppt[Sex==s],mean_surv[Sex==s],
bg=sex_cols[s],pch=21,cex=2)
lines(ppt_seq,invlogit(mean(surv_coef$b0_s) +
mean(surv_coef$bsize_s) * surv_mean_sizes$size[surv_mean_sizes$Sex==s] +
mean(surv_coef$bsex_s) * (s-1) +
mean(surv_coef$bppt_s) * ppt_seq +
mean(surv_coef$btemp_s) * surv_mean_temp$temp[surv_mean_temp$Sex==s] +
mean(surv_coef$bcvppt_s) * surv_mean_cv_ppt$cv_ppt[surv_mean_cv_ppt$Sex==s] +
mean(surv_coef$bpptsex_s) * ppt_seq * (s-1) +
mean(surv_coef$btempsex_s) * surv_mean_temp$temp[surv_mean_temp$Sex==s] * (s-1) +
mean(surv_coef$bcvpptsex_s) * surv_mean_cv_ppt$cv_ppt[surv_mean_cv_ppt$Sex==s] * (s-1) +
mean(surv_coef$bppttempsex_s) * ppt_seq * surv_mean_temp$temp[surv_mean_temp$Sex==s] * surv_mean_cv_ppt$cv_ppt[surv_mean_cv_ppt$Sex==s] * (s-1)
),col= sex_cols[s],lwd=3)
}
})
surv_mean_sizes$size[surv_mean_sizes$Sex==1]
with(poar_grow_plot,{
par(mar=c(0,4,1,0))
plot(ppt,mean_grow,
xlab=" Precipitation",ylab=" #tillers");box()
for(s in 1:2){
points(ppt[Sex==s],mean_grow[Sex==s],
bg=sex_cols[s],pch=21,cex=2)
lines(ppt_seq,exp(mean(grow_coef$b0_g) +
mean(grow_coef$bsize_g) * grow_mean_sizes$size[grow_mean_sizes$Sex==s] +
mean(grow_coef$bsex_g) * (s-1) +
mean(grow_coef$bppt_g) * ppt_seq +
mean(grow_coef$btemp_g) * grow_mean_temp$temp[grow_mean_temp$Sex==s] +
mean(grow_coef$bcvppt_g) * grow_mean_cv_ppt$cv_ppt[grow_mean_cv_ppt$Sex==s] +
mean(grow_coef$bpptsex_g) * ppt_seq * (s-1) +
mean(grow_coef$btempsex_g) * grow_mean_temp$temp[grow_mean_temp$Sex==s] * (s-1) +
mean(grow_coef$bcvpptsex_g) * grow_mean_cv_ppt$cv_ppt[grow_mean_cv_ppt$Sex==s] * (s-1) +
mean(grow_coef$bppttempsex_g) * ppt_seq * grow_mean_temp$temp[grow_mean_temp$Sex==s] * grow_mean_cv_ppt$cv_ppt[grow_mean_cv_ppt$Sex==s] * (s-1)
),col= sex_cols[s],lwd=3)
}
})
with(poar_surv_plot,{
par(mar=c(2,4,1,0))
plot(scaled_ppt,mean_surv,ylim=c(0,1),
xlab=" Precipitation",ylab=" Pr Survival");box()
for(s in 1:2){
points(scaled_ppt[Sex==s],mean_surv[Sex==s],
bg=sex_cols[s],pch=21,cex=2)
lines(ppt_seq,invlogit(mean(surv_coef$b0_s) +
mean(surv_coef$bsize_s) * surv_mean_sizes$size[surv_mean_sizes$Sex==s] +
mean(surv_coef$bsex_s) * (s-1) +
mean(surv_coef$bppt_s) * ppt_seq +
mean(surv_coef$btemp_s) * surv_mean_temp$temp[surv_mean_temp$Sex==s] +
mean(surv_coef$bcvppt_s) * surv_mean_cv_ppt$cv_ppt[surv_mean_cv_ppt$Sex==s] +
mean(surv_coef$bpptsex_s) * ppt_seq * (s-1) +
mean(surv_coef$btempsex_s) * surv_mean_temp$temp[surv_mean_temp$Sex==s] * (s-1) +
mean(surv_coef$bcvpptsex_s) * surv_mean_cv_ppt$cv_ppt[surv_mean_cv_ppt$Sex==s] * (s-1) +
mean(surv_coef$bppttempsex_s) * ppt_seq * surv_mean_temp$temp[surv_mean_temp$Sex==s] * surv_mean_cv_ppt$cv_ppt[surv_mean_cv_ppt$Sex==s] * (s-1)
),col= sex_cols[s],lwd=3)
}
})
for(s in 1:2){
SV<-invlogit(mean(surv_coef$b0_s) +
mean(surv_coef$bsize_s) * surv_mean_sizes$size[surv_mean_sizes$Sex==s] +
mean(surv_coef$bsex_s) * (s-1) +
mean(surv_coef$bppt_s) * ppt_seq +
mean(surv_coef$btemp_s) * surv_mean_temp$temp[surv_mean_temp$Sex==s] +
mean(surv_coef$bcvppt_s) * surv_mean_cv_ppt$cv_ppt[surv_mean_cv_ppt$Sex==s] +
mean(surv_coef$bpptsex_s) * ppt_seq * (s-1) +
mean(surv_coef$btempsex_s) * surv_mean_temp$temp[surv_mean_temp$Sex==s] * (s-1) +
mean(surv_coef$bcvpptsex_s) * surv_mean_cv_ppt$cv_ppt[surv_mean_cv_ppt$Sex==s] * (s-1) +
mean(surv_coef$bppttempsex_s) * ppt_seq * surv_mean_temp$temp[surv_mean_temp$Sex==s] * surv_mean_cv_ppt$cv_ppt[surv_mean_cv_ppt$Sex==s] * (s-1)
)
print(SV)
}
rm(list = ls())
# load packages
library(rstan)
# set rstan options
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(13)
# Sys.setenv(LOCAL_CPPFLAGS = '-march=corei7 -mtune=corei7')
options(tidyverse.quiet = TRUE)
library(tidyverse)
options(dplyr.summarise.inform = FALSE)
library(bayesplot)
# install.packages("countreg",repos = "http://R-Forge.R-project.org")
library(countreg)
library(rmutil)
library(actuar)
library(SPEI)
library(LaplacesDemon)
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("scater")
library(scater)
poar_allsites <- read.csv("https://www.dropbox.com/s/xk4225mn8btqhbm/demography_allsites.csv?dl=1", stringsAsFactors = F)#common garden data
poar_allsites$census.year<-poar_allsites$year-1 #Add census year to match with climate data
poar_allsites %>%
dplyr::select(everything()) %>%
filter(census.year %in% (2015:2016))-> poar_allsites_2015_2016 # Drop the first census to match with the seasonal model (growing and dormant season temp and precip)
viabVr <- read.csv("https://www.dropbox.com/s/jfkgoxgv8o1fgqx/viability.csv?dl=1") #seed viability and germination
poar_ppt <- read.csv("https://www.dropbox.com/s/kkga2hf9k1w9ht1/Poa_pr.csv?dl=1", stringsAsFactors = F) # monthly  precipitation
poar_temp <- read.csv("https://www.dropbox.com/s/n0vrn8q5ma49rc9/Poa_tas.csv?dl=1", stringsAsFactors = F) # monthly temperature)
poar_ppt$census.year<-ifelse(poar_ppt$month<5,poar_ppt$year-1,poar_ppt$year) # data were collected in May. Thus, the precipitation for the census year is both the precipitation from May to December of the previous year and precipitation of the current year.
poar_temp$census.year<-ifelse(poar_temp$month<5,poar_temp$year-1,poar_temp$year)
poar_ppt %>%
dplyr::select(Longitude, Latitude, census.year, ppt,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_ppt=sum(ppt),sd_ppt=sd(ppt),cv_ppt=sd_ppt/mean_ppt,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_pptann
poar_temp %>%
dplyr::select(Longitude, Latitude, census.year, temp,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_temp = mean(temp),sd_temp=sd(temp),cv_temp=sd_temp/mean_temp,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_tempann
poar_climann<- merge(x = poar_pptann, y = poar_tempann) # merge temperature and precipitation data
poar_allsites.clim <- left_join(x = poar_allsites_2015_2016 ,y =poar_climann,by=c("site","census.year","Longitude","Latitude")) # merge the demographic data with climatic data for each site
names(poar_allsites.clim)
figppt <- ggpubr::ggscatter(poar_allsites.clim, x = "mean_ppt", y = "cv_ppt", color = '#0072B2',shape = 19, size=4,xlab="Annual mean precipitation",
ylab="CV precipitation",
add = "reg.line",  # Add regressin line
add.params = list(color = "#0072B2", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
figppt<-figppt + ggpubr::stat_cor(method = "pearson", label.x = 1200, label.y = 0.04)
fitemp <- ggpubr::ggscatter(poar_allsites.clim, x = "mean_temp", y = "cv_temp",color = '#0072B2',shape = 19,size=4,xlab="Annual mean temperature ",ylab="CV temperature",
add = "reg.line",  # Add regressin line
add.params = list(color = "#0072B2", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
fitemp<-fitemp + ggpubr::stat_cor(method = "pearson", label.x = 14, label.y = 0.2)
(figppttemp<-ggpubr::ggarrange(plotlist = list(figppt, fitemp)))
pdf("/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/Figures/Correlationannualclimate.pdf",useDingbats = F,height=5,width=8)
print(figppttemp)
dev.off()
# Survival
poar_allsites.clim %>%
subset( tillerN_t0 > 0 )%>%
dplyr::select( year, Code, site, Block, Sex,
Longitude, Latitude,
tillerN_t0, surv_t1,mean_ppt,cv_ppt,mean_temp,site)%>%
na.omit %>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
mutate( z_size_t0   = tillerN_t0 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.surv
# growth
poar_allsites.clim %>%
subset( tillerN_t0 > 0 & tillerN_t1 > 0)%>%
dplyr::select( year, Code, site, Block, Sex,
Longitude, Latitude,
tillerN_t0, tillerN_t1,surv_t1,mean_ppt,cv_ppt,mean_temp,site)%>%
na.omit %>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
mutate( z_size_t0   = tillerN_t0 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.grow
# flowering
poar_allsites.clim %>%
subset( tillerN_t1 > 0 )%>%
dplyr::select( year, Code, site, Block, Sex,
Longitude, Latitude,
tillerN_t1, flowerN_t1,flow_t1,mean_ppt,cv_ppt,mean_temp,site)%>%
na.omit %>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
mutate( z_size_t1   = tillerN_t1 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.flow
# Panicles
poar_allsites.clim %>%
subset( flowerN_t1 > 0 & tillerN_t1 > 0 )%>%
dplyr::select( year, Code, site, Block, Sex,
Longitude, Latitude,
tillerN_t1, flowerN_t1,mean_ppt,cv_ppt,mean_temp,site)%>%
na.omit %>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric,
panic_t1 = flowerN_t1) %>%
mutate( z_size_t1   = tillerN_t1 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.panic
# seed viability
viabVr %>%
dplyr::select( plot, totS, yesMaybe, sr_f ) %>%
dplyr::rename( SR        = sr_f,
y_viab = yesMaybe,
tot_seeds_viab = totS) %>%
dplyr::select(y_viab, tot_seeds_viab, SR ) %>%
na.omit->viab
# seed germination
viabVr %>%
dplyr::select( plot, germTot, germFail, sr_f ) %>%
dplyr::rename( SR        = sr_f,
y_germ    = germTot ) %>%
mutate(tot_seeds_germ = y_germ + germFail ) %>%
dplyr::select(y_germ, tot_seeds_germ, SR ) %>%
na.omit->germ
# seeds per panicle
viabVr %>%
dplyr::select(SeedN)  %>%
na.omit->seeds
