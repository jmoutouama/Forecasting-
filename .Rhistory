mutate( z_size_t0   = tillerN_t0 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.surv
#load stan output: this will also take a while, but not as long as running the model from scratch
fit_allsites_surv_annual <- readRDS(url("https://www.dropbox.com/s/sqjvhh2rxdoifc4/poar_survivalannual.rds?dl=1"))
#ignore warning from readRDS
traceplot(fit_allsites_surv_annual, pars = c("b0_s", "bsize_s","bsex_s","bppt_s","btemp_s","bcvppt_s","bpptsex_s","btempsex_s","bcvpptsex_s","bppttempsex_s"), inc_warmup = TRUE, nrow =5 )
#load stan output: this will also take a while, but not as long as running the model from scratch
fit_allsites_surv_annual_polyn <- readRDS(url("https://www.dropbox.com/s/sqjvhh2rxdoifc4/poar_survivalannualpolynomial.rds?dl=1"))
#ignore warning from readRDS
traceplot(fit_allsites_surv_annual_polyn, pars = c("b0_s", "bsize_s","bsex_s","bppt_s","btemp_s","bcvppt_s","bpptsex_s","btempsex_s","bcvpptsex_s","bppttempsex_s","bppt2_s","btemp2_s","bcvppt2_s","bppt2sex_s","btemp2sex_s","bcvppt2sex_s"), inc_warmup = TRUE, nrow =12 )
traceplot(fit_allsites_surv_annual_polyn, pars = c("b0_s", "bsize_s","bsex_s","bppt_s","btemp_s","bcvppt_s","bpptsex_s","btempsex_s","bcvpptsex_s","bppttempsex_s","bppt2_s","btemp2_s","bcvppt2_s","bppt2sex_s","btemp2sex_s","bcvppt2sex_s"), inc_warmup = TRUE, nrow =5 )
traceplot(fit_allsites_surv_annual_polyn, pars = c("b0_s", "bsize_s","bsex_s","bppt_s","btemp_s","bcvppt_s","bpptsex_s","btempsex_s","bcvpptsex_s","bppttempsex_s","bppt2_s","btemp2_s","bcvppt2_s","bppt2sex_s","btemp2sex_s","bcvppt2sex_s"), inc_warmup = TRUE, nrow =5 )
#load stan output: this will also take a while, but not as long as running the model from scratch
fit_allsites_surv_annual_polyn <- readRDS(url("https://www.dropbox.com/s/5mdqv0cb6daogrq/poar_survivalannualpolynomial.rds?dl=1"))
#ignore warning from readRDS
traceplot(fit_allsites_surv_annual_polyn, pars = c("b0_s", "bsize_s","bsex_s","bppt_s","btemp_s","bcvppt_s","bpptsex_s","btempsex_s","bcvpptsex_s","bppttempsex_s","bppt2_s","btemp2_s","bcvppt2_s","bppt2sex_s","btemp2sex_s","bcvppt2sex_s"), inc_warmup = TRUE, nrow =5 )
rm(list = ls())
# load packages
library(rstan)
# set rstan options
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(13)
# Sys.setenv(LOCAL_CPPFLAGS = '-march=corei7 -mtune=corei7')
options(tidyverse.quiet = TRUE)
library(tidyverse)
options(dplyr.summarise.inform = FALSE)
library(bayesplot)
# install.packages("countreg",repos = "http://R-Forge.R-project.org")
library(countreg)
library(rmutil)
library(actuar)
library(SPEI)
library(LaplacesDemon)
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("scater")
library(scater)
poar_allsites <- read.csv("https://www.dropbox.com/s/xk4225mn8btqhbm/demography_allsites.csv?dl=1", stringsAsFactors = F)#common garden data
poar_allsites$census.year<-poar_allsites$year-1 #Add census year to match with climate data
poar_allsites %>%
dplyr::select(everything()) %>%
filter(census.year %in% (2015:2016))-> poar_allsites_2015_2016 # Drop the first census to match with the seasonal model (growing and dormant season temp and precip)
poar_ppt <- read.csv("https://www.dropbox.com/s/kkga2hf9k1w9ht1/Poa_pr.csv?dl=1", stringsAsFactors = F) # monthly  precipitation
poar_temp <- read.csv("https://www.dropbox.com/s/n0vrn8q5ma49rc9/Poa_tas.csv?dl=1", stringsAsFactors = F) # monthly temperature)
poar_ppt$census.year<-ifelse(poar_ppt$month<5,poar_ppt$year-1,poar_ppt$year) # data were collected in May. Thus, the precipitation for the census year is both the precipitation from May to December of the previous year and precipitation of the current year.
poar_temp$census.year<-ifelse(poar_temp$month<5,poar_temp$year-1,poar_temp$year)
poar_ppt %>%
dplyr::select(Longitude, Latitude, census.year, ppt,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_ppt=sum(ppt),sd_ppt=sd(ppt),cv_ppt=sd_ppt/mean_ppt,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_pptann
poar_temp %>%
dplyr::select(Longitude, Latitude, census.year, temp,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_temp = mean(temp),sd_temp=sd(temp),cv_temp=sd_temp/mean_temp,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_tempann
poar_climann<- merge(x = poar_pptann, y = poar_tempann) # merge temperature and precipitation data
poar_allsites.clim <- left_join(x = poar_allsites_2015_2016 ,y =poar_climann,by=c("site","census.year","Longitude","Latitude")) # merge the demographic data with climatic data for each site
rm(list = ls())
rm(list = ls())
# load packages
library(rstan)
# set rstan options
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(13)
# Sys.setenv(LOCAL_CPPFLAGS = '-march=corei7 -mtune=corei7')
options(tidyverse.quiet = TRUE)
library(tidyverse)
options(dplyr.summarise.inform = FALSE)
library(bayesplot)
# install.packages("countreg",repos = "http://R-Forge.R-project.org")
library(countreg)
library(rmutil)
library(actuar)
library(SPEI)
library(LaplacesDemon)
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("scater")
library(scater)
poar_allsites <- read.csv("https://www.dropbox.com/s/xk4225mn8btqhbm/demography_allsites.csv?dl=1", stringsAsFactors = F)#common garden data
poar_allsites$census.year<-poar_allsites$year-1 #Add census year to match with climate data
poar_allsites %>%
dplyr::select(everything()) %>%
filter(census.year %in% (2015:2016))-> poar_allsites_2015_2016 # Drop the first census to match with the seasonal model (growing and dormant season temp and precip)
poar_ppt <- read.csv("https://www.dropbox.com/s/kkga2hf9k1w9ht1/Poa_pr.csv?dl=1", stringsAsFactors = F) # monthly  precipitation
poar_temp <- read.csv("https://www.dropbox.com/s/n0vrn8q5ma49rc9/Poa_tas.csv?dl=1", stringsAsFactors = F) # monthly temperature)
poar_ppt$census.year<-ifelse(poar_ppt$month<5,poar_ppt$year-1,poar_ppt$year) # data were collected in May. Thus, the precipitation for the census year is both the precipitation from May to December of the previous year and precipitation of the current year.
poar_temp$census.year<-ifelse(poar_temp$month<5,poar_temp$year-1,poar_temp$year)
poar_ppt %>%
dplyr::select(Longitude, Latitude, census.year, ppt,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_ppt=sum(ppt),sd_ppt=sd(ppt),cv_ppt=sd_ppt/mean_ppt,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_pptann
poar_temp %>%
dplyr::select(Longitude, Latitude, census.year, temp,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_temp = mean(temp),sd_temp=sd(temp),cv_temp=sd_temp/mean_temp,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_tempann
poar_climann<- merge(x = poar_pptann, y = poar_tempann) # merge temperature and precipitation data
poar_allsites.clim <- left_join(x = poar_allsites_2015_2016 ,y =poar_climann,by=c("site","census.year","Longitude","Latitude")) # merge the demographic data with climatic data for each site
poar_temp %>%
dplyr::select(site,Longitude, Latitude,census.year,temp,month) %>%
filter(census.year %in% (2015:2016)) %>%
mutate(Season=ifelse((month >= 6) & (month <= 9), "dormant", "growing")) %>%
group_by(site,Season) %>%
summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),temp_season = mean(temp))->poar_tempseason
poar_ppt %>%
dplyr::select(site,Longitude, Latitude,census.year,ppt,month) %>%
filter(census.year %in% (2015:2016)) %>%
mutate(Season=ifelse((month >= 6) & (month <= 9), "dormant", "growing")) %>%
group_by(site,Season) %>%
summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),ppt_season = sum(ppt))->poar_pptseason
poar_climseason<- merge(x = poar_tempseason, y = poar_pptseason) # merge temperature and precipitation data
poar_allsites.clim_season <- left_join(x = poar_allsites_2015_2016 ,y =poar_climseason,by=c("site","Longitude","Latitude")) # merge the demographic data with climatic data for each site
poar_allsites.clim_season %>%
filter(Season=="growing") %>%
mutate(tempgrow=temp_season,pptgrow=ppt_season)->poar_allsites.clim_season_grow
# head(poar_allsites.clim_season_grow)
# head(poar_allsites.clim_season_dorm)
poar_allsites.clim_season %>%
filter(Season=="dormant") %>%
mutate(tempdorm=temp_season,pptdorm=ppt_season)->poar_allsites.clim_season_dorm
poar.clim_seasonal<- cbind(poar_allsites.clim_season_grow,tempdorm=poar_allsites.clim_season_dorm$tempdorm,pptdorm=poar_allsites.clim_season_dorm$pptdorm)
sim_pars <- list(
warmup = 1000,
iter = 4000,
thin = 3,
chains = 3
)
# Survival
poar_allsites.clim %>%
subset( tillerN_t0 > 0 )%>%
dplyr::select( year, Code, site, Block, Sex,
Longitude, Latitude,
tillerN_t0, surv_t1,mean_ppt,cv_ppt,mean_temp,site)%>%
na.omit %>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
mutate( z_size_t0   = tillerN_t0 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.surv
poar_sites_annual.surv <- list( n_sites    = poar_allsites.surv$site %>% n_distinct,
n_sources  = poar_allsites.surv$source %>% n_distinct(),
# survival data
n_blocks_s = poar_allsites.surv$Block %>% n_distinct,
site_s   = poar_allsites.surv$site,
source_s =  poar_allsites.surv$source,
block_s  = poar_allsites.surv$Block,
ppt_s=poar_allsites.surv$z_ppt_t1_z,
cvppt_s=poar_allsites.surv$z_cvppt_t1_z,
temp_s=poar_allsites.surv$z_temp_t1_z,
site_block_s = data.frame( site_i  = poar_allsites.surv$site,
block_i = poar_allsites.surv$Block ) %>%
unique %>% .$site_i,
male_s   = poar_allsites.surv$Sex-1,
size_s   = poar_allsites.surv$z_size_t0,
y_s      = poar_allsites.surv$surv_t1,
n_s      = nrow(poar_allsites.surv)
)
fit_allsites_surv_annual <- stan(
file = "/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/stan/poar_survivalannual.stan",
data = poar_sites_annual.surv,
warmup = sim_pars$warmup,
iter = sim_pars$iter,
thin = sim_pars$thin,
chains = sim_pars$chains)
rm(list = ls())
rm(list = ls())
# load packages
library(rstan)
# set rstan options
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(13)
# Sys.setenv(LOCAL_CPPFLAGS = '-march=corei7 -mtune=corei7')
options(tidyverse.quiet = TRUE)
library(tidyverse)
options(dplyr.summarise.inform = FALSE)
library(bayesplot)
# install.packages("countreg",repos = "http://R-Forge.R-project.org")
library(countreg)
library(rmutil)
library(actuar)
library(SPEI)
library(LaplacesDemon)
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("scater")
library(scater)
poar_allsites <- read.csv("https://www.dropbox.com/s/xk4225mn8btqhbm/demography_allsites.csv?dl=1", stringsAsFactors = F)#common garden data
poar_allsites$census.year<-poar_allsites$year-1 #Add census year to match with climate data
poar_allsites %>%
dplyr::select(everything()) %>%
filter(census.year %in% (2015:2016))-> poar_allsites_2015_2016 # Drop the first census to match with the seasonal model (growing and dormant season temp and precip)
poar_ppt <- read.csv("https://www.dropbox.com/s/kkga2hf9k1w9ht1/Poa_pr.csv?dl=1", stringsAsFactors = F) # monthly  precipitation
poar_temp <- read.csv("https://www.dropbox.com/s/n0vrn8q5ma49rc9/Poa_tas.csv?dl=1", stringsAsFactors = F) # monthly temperature)
poar_ppt$census.year<-ifelse(poar_ppt$month<5,poar_ppt$year-1,poar_ppt$year) # data were collected in May. Thus, the precipitation for the census year is both the precipitation from May to December of the previous year and precipitation of the current year.
poar_temp$census.year<-ifelse(poar_temp$month<5,poar_temp$year-1,poar_temp$year)
poar_ppt %>%
dplyr::select(Longitude, Latitude, census.year, ppt,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_ppt=sum(ppt),sd_ppt=sd(ppt),cv_ppt=sd_ppt/mean_ppt,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_pptann
poar_temp %>%
dplyr::select(Longitude, Latitude, census.year, temp,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_temp = mean(temp),sd_temp=sd(temp),cv_temp=sd_temp/mean_temp,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_tempann
poar_climann<- merge(x = poar_pptann, y = poar_tempann) # merge temperature and precipitation data
poar_allsites.clim <- left_join(x = poar_allsites_2015_2016 ,y =poar_climann,by=c("site","census.year","Longitude","Latitude")) # merge the demographic data with climatic data for each site
poar_temp %>%
dplyr::select(site,Longitude, Latitude,census.year,temp,month) %>%
filter(census.year %in% (2015:2016)) %>%
mutate(Season=ifelse((month >= 6) & (month <= 9), "dormant", "growing")) %>%
group_by(site,Season) %>%
summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),temp_season = mean(temp))->poar_tempseason
poar_ppt %>%
dplyr::select(site,Longitude, Latitude,census.year,ppt,month) %>%
filter(census.year %in% (2015:2016)) %>%
mutate(Season=ifelse((month >= 6) & (month <= 9), "dormant", "growing")) %>%
group_by(site,Season) %>%
summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),ppt_season = sum(ppt))->poar_pptseason
poar_climseason<- merge(x = poar_tempseason, y = poar_pptseason) # merge temperature and precipitation data
poar_allsites.clim_season <- left_join(x = poar_allsites_2015_2016 ,y =poar_climseason,by=c("site","Longitude","Latitude")) # merge the demographic data with climatic data for each site
poar_allsites.clim_season %>%
filter(Season=="growing") %>%
mutate(tempgrow=temp_season,pptgrow=ppt_season)->poar_allsites.clim_season_grow
# head(poar_allsites.clim_season_grow)
# head(poar_allsites.clim_season_dorm)
poar_allsites.clim_season %>%
filter(Season=="dormant") %>%
mutate(tempdorm=temp_season,pptdorm=ppt_season)->poar_allsites.clim_season_dorm
poar.clim_seasonal<- cbind(poar_allsites.clim_season_grow,tempdorm=poar_allsites.clim_season_dorm$tempdorm,pptdorm=poar_allsites.clim_season_dorm$pptdorm)
sim_pars <- list(
warmup = 1000,
iter = 4000,
thin = 3,
chains = 3
)
# Survival
poar_allsites.clim %>%
subset( tillerN_t0 > 0 )%>%
dplyr::select( year, Code, site, Block, Sex,
Longitude, Latitude,
tillerN_t0, surv_t1,mean_ppt,cv_ppt,mean_temp,site)%>%
na.omit %>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
mutate( z_size_t0   = tillerN_t0 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.surv
poar_sites_annual.surv <- list( n_sites    = poar_allsites.surv$site %>% n_distinct,
n_sources  = poar_allsites.surv$source %>% n_distinct(),
# survival data
n_blocks_s = poar_allsites.surv$Block %>% n_distinct,
site_s   = poar_allsites.surv$site,
source_s =  poar_allsites.surv$source,
block_s  = poar_allsites.surv$Block,
ppt_s=poar_allsites.surv$z_ppt_t1_z,
cvppt_s=poar_allsites.surv$z_cvppt_t1_z,
temp_s=poar_allsites.surv$z_temp_t1_z,
site_block_s = data.frame( site_i  = poar_allsites.surv$site,
block_i = poar_allsites.surv$Block ) %>%
unique %>% .$site_i,
male_s   = poar_allsites.surv$Sex-1,
size_s   = poar_allsites.surv$z_size_t0,
y_s      = poar_allsites.surv$surv_t1,
n_s      = nrow(poar_allsites.surv)
)
fit_allsites_surv_annual <- stan(
file = "/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/stan/poar_survivalannual.stan",
data = poar_sites_annual.surv,
warmup = sim_pars$warmup,
iter = sim_pars$iter,
thin = sim_pars$thin,
chains = sim_pars$chains)
rm(list = ls())
# load packages
library(rstan)
# set rstan options
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(13)
# Sys.setenv(LOCAL_CPPFLAGS = '-march=corei7 -mtune=corei7')
options(tidyverse.quiet = TRUE)
library(tidyverse)
options(dplyr.summarise.inform = FALSE)
library(bayesplot)
# install.packages("countreg",repos = "http://R-Forge.R-project.org")
library(countreg)
library(rmutil)
library(actuar)
library(SPEI)
library(LaplacesDemon)
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("scater")
library(scater)
poar_allsites <- read.csv("https://www.dropbox.com/s/xk4225mn8btqhbm/demography_allsites.csv?dl=1", stringsAsFactors = F)#common garden data
poar_allsites$census.year<-poar_allsites$year-1 #Add census year to match with climate data
poar_allsites %>%
dplyr::select(everything()) %>%
filter(census.year %in% (2015:2016))-> poar_allsites_2015_2016 # Drop the first census to match with the seasonal model (growing and dormant season temp and precip)
poar_ppt <- read.csv("https://www.dropbox.com/s/kkga2hf9k1w9ht1/Poa_pr.csv?dl=1", stringsAsFactors = F) # monthly  precipitation
poar_temp <- read.csv("https://www.dropbox.com/s/n0vrn8q5ma49rc9/Poa_tas.csv?dl=1", stringsAsFactors = F) # monthly temperature)
poar_ppt$census.year<-ifelse(poar_ppt$month<5,poar_ppt$year-1,poar_ppt$year) # data were collected in May. Thus, the precipitation for the census year is both the precipitation from May to December of the previous year and precipitation of the current year.
poar_temp$census.year<-ifelse(poar_temp$month<5,poar_temp$year-1,poar_temp$year)
poar_ppt %>%
dplyr::select(Longitude, Latitude, census.year, ppt,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_ppt=sum(ppt),sd_ppt=sd(ppt),cv_ppt=sd_ppt/mean_ppt,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_pptann
poar_temp %>%
dplyr::select(Longitude, Latitude, census.year, temp,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_temp = mean(temp),sd_temp=sd(temp),cv_temp=sd_temp/mean_temp,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_tempann
poar_climann<- merge(x = poar_pptann, y = poar_tempann) # merge temperature and precipitation data
poar_allsites.clim <- left_join(x = poar_allsites_2015_2016 ,y =poar_climann,by=c("site","census.year","Longitude","Latitude")) # merge the demographic data with climatic data for each site
poar_temp %>%
dplyr::select(site,Longitude, Latitude,census.year,temp,month) %>%
filter(census.year %in% (2015:2016)) %>%
mutate(Season=ifelse((month >= 6) & (month <= 9), "dormant", "growing")) %>%
group_by(site,Season) %>%
summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),temp_season = mean(temp))->poar_tempseason
poar_ppt %>%
dplyr::select(site,Longitude, Latitude,census.year,ppt,month) %>%
filter(census.year %in% (2015:2016)) %>%
mutate(Season=ifelse((month >= 6) & (month <= 9), "dormant", "growing")) %>%
group_by(site,Season) %>%
summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),ppt_season = sum(ppt))->poar_pptseason
poar_climseason<- merge(x = poar_tempseason, y = poar_pptseason) # merge temperature and precipitation data
poar_allsites.clim_season <- left_join(x = poar_allsites_2015_2016 ,y =poar_climseason,by=c("site","Longitude","Latitude")) # merge the demographic data with climatic data for each site
poar_allsites.clim_season %>%
filter(Season=="growing") %>%
mutate(tempgrow=temp_season,pptgrow=ppt_season)->poar_allsites.clim_season_grow
# head(poar_allsites.clim_season_grow)
# head(poar_allsites.clim_season_dorm)
poar_allsites.clim_season %>%
filter(Season=="dormant") %>%
mutate(tempdorm=temp_season,pptdorm=ppt_season)->poar_allsites.clim_season_dorm
poar.clim_seasonal<- cbind(poar_allsites.clim_season_grow,tempdorm=poar_allsites.clim_season_dorm$tempdorm,pptdorm=poar_allsites.clim_season_dorm$pptdorm)
sim_pars <- list(
warmup = 1000,
iter = 4000,
thin = 3,
chains = 3
)
# Survival
poar_allsites.clim %>%
subset( tillerN_t0 > 0 )%>%
dplyr::select( year, Code, site, Block, Sex,
Longitude, Latitude,
tillerN_t0, surv_t1,mean_ppt,cv_ppt,mean_temp,site)%>%
na.omit %>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
mutate( z_size_t0   = tillerN_t0 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.surv
poar_sites_annual.surv <- list( n_sites    = poar_allsites.surv$site %>% n_distinct,
n_sources  = poar_allsites.surv$source %>% n_distinct(),
# survival data
n_blocks_s = poar_allsites.surv$Block %>% n_distinct,
site_s   = poar_allsites.surv$site,
source_s =  poar_allsites.surv$source,
block_s  = poar_allsites.surv$Block,
ppt_s=poar_allsites.surv$z_ppt_t1_z,
cvppt_s=poar_allsites.surv$z_cvppt_t1_z,
temp_s=poar_allsites.surv$z_temp_t1_z,
site_block_s = data.frame( site_i  = poar_allsites.surv$site,
block_i = poar_allsites.surv$Block ) %>%
unique %>% .$site_i,
male_s   = poar_allsites.surv$Sex-1,
size_s   = poar_allsites.surv$z_size_t0,
y_s      = poar_allsites.surv$surv_t1,
n_s      = nrow(poar_allsites.surv)
)
fit_allsites_surv_annual <- stan(
file = "/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/stan/poar_survivalannual.stan",
data = poar_sites_annual.surv,
warmup = sim_pars$warmup,
iter = sim_pars$iter,
thin = sim_pars$thin,
chains = sim_pars$chains)
rm(list = ls())
# load packages
library(rstan)
# set rstan options
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(13)
# Sys.setenv(LOCAL_CPPFLAGS = '-march=corei7 -mtune=corei7')
options(tidyverse.quiet = TRUE)
library(tidyverse)
options(dplyr.summarise.inform = FALSE)
library(bayesplot)
# install.packages("countreg",repos = "http://R-Forge.R-project.org")
library(countreg)
library(rmutil)
library(actuar)
library(SPEI)
library(LaplacesDemon)
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("scater")
library(scater)
poar_allsites <- read.csv("https://www.dropbox.com/s/xk4225mn8btqhbm/demography_allsites.csv?dl=1", stringsAsFactors = F)#common garden data
poar_allsites$census.year<-poar_allsites$year-1 #Add census year to match with climate data
poar_allsites %>%
dplyr::select(everything()) %>%
filter(census.year %in% (2015:2016))-> poar_allsites_2015_2016 # Drop the first census to match with the seasonal model (growing and dormant season temp and precip)
poar_ppt <- read.csv("https://www.dropbox.com/s/kkga2hf9k1w9ht1/Poa_pr.csv?dl=1", stringsAsFactors = F) # monthly  precipitation
poar_temp <- read.csv("https://www.dropbox.com/s/n0vrn8q5ma49rc9/Poa_tas.csv?dl=1", stringsAsFactors = F) # monthly temperature)
poar_ppt$census.year<-ifelse(poar_ppt$month<5,poar_ppt$year-1,poar_ppt$year) # data were collected in May. Thus, the precipitation for the census year is both the precipitation from May to December of the previous year and precipitation of the current year.
poar_temp$census.year<-ifelse(poar_temp$month<5,poar_temp$year-1,poar_temp$year)
poar_ppt %>%
dplyr::select(Longitude, Latitude, census.year, ppt,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_ppt=sum(ppt),sd_ppt=sd(ppt),cv_ppt=sd_ppt/mean_ppt,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_pptann
poar_temp %>%
dplyr::select(Longitude, Latitude, census.year, temp,site) %>%
filter(census.year %in% (2015:2016)) %>%
group_by(site,census.year) %>%
summarise(mean_temp = mean(temp),sd_temp=sd(temp),cv_temp=sd_temp/mean_temp,Longitude=unique(Longitude),Latitude=unique(Latitude))->poar_tempann
poar_climann<- merge(x = poar_pptann, y = poar_tempann) # merge temperature and precipitation data
poar_allsites.clim <- left_join(x = poar_allsites_2015_2016 ,y =poar_climann,by=c("site","census.year","Longitude","Latitude")) # merge the demographic data with climatic data for each site
poar_temp %>%
dplyr::select(site,Longitude, Latitude,census.year,temp,month) %>%
filter(census.year %in% (2015:2016)) %>%
mutate(Season=ifelse((month >= 6) & (month <= 9), "dormant", "growing")) %>%
group_by(site,Season) %>%
summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),temp_season = mean(temp))->poar_tempseason
poar_ppt %>%
dplyr::select(site,Longitude, Latitude,census.year,ppt,month) %>%
filter(census.year %in% (2015:2016)) %>%
mutate(Season=ifelse((month >= 6) & (month <= 9), "dormant", "growing")) %>%
group_by(site,Season) %>%
summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),ppt_season = sum(ppt))->poar_pptseason
poar_climseason<- merge(x = poar_tempseason, y = poar_pptseason) # merge temperature and precipitation data
poar_allsites.clim_season <- left_join(x = poar_allsites_2015_2016 ,y =poar_climseason,by=c("site","Longitude","Latitude")) # merge the demographic data with climatic data for each site
poar_allsites.clim_season %>%
filter(Season=="growing") %>%
mutate(tempgrow=temp_season,pptgrow=ppt_season)->poar_allsites.clim_season_grow
# head(poar_allsites.clim_season_grow)
# head(poar_allsites.clim_season_dorm)
poar_allsites.clim_season %>%
filter(Season=="dormant") %>%
mutate(tempdorm=temp_season,pptdorm=ppt_season)->poar_allsites.clim_season_dorm
poar.clim_seasonal<- cbind(poar_allsites.clim_season_grow,tempdorm=poar_allsites.clim_season_dorm$tempdorm,pptdorm=poar_allsites.clim_season_dorm$pptdorm)
sim_pars <- list(
warmup = 1000,
iter = 4000,
thin = 3,
chains = 3
)
# Survival
poar_allsites.clim %>%
subset( tillerN_t0 > 0 )%>%
dplyr::select( year, Code, site, Block, Sex,
Longitude, Latitude,
tillerN_t0, surv_t1,mean_ppt,cv_ppt,mean_temp,site)%>%
na.omit %>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
mutate( z_size_t0   = tillerN_t0 %>% scale %>% .[,1],
z_ppt_t1_z = mean_ppt %>% scale %>% .[,1],
z_cvppt_t1_z = cv_ppt %>% scale %>% .[,1],
z_temp_t1_z = mean_temp %>% scale %>% .[,1])->poar_allsites.surv
poar_sites_annual.surv <- list( n_sites    = poar_allsites.surv$site %>% n_distinct,
n_sources  = poar_allsites.surv$source %>% n_distinct(),
# survival data
n_blocks_s = poar_allsites.surv$Block %>% n_distinct,
site_s   = poar_allsites.surv$site,
source_s =  poar_allsites.surv$source,
block_s  = poar_allsites.surv$Block,
ppt_s=poar_allsites.surv$z_ppt_t1_z,
cvppt_s=poar_allsites.surv$z_cvppt_t1_z,
temp_s=poar_allsites.surv$z_temp_t1_z,
site_block_s = data.frame( site_i  = poar_allsites.surv$site,
block_i = poar_allsites.surv$Block ) %>%
unique %>% .$site_i,
male_s   = poar_allsites.surv$Sex-1,
size_s   = poar_allsites.surv$z_size_t0,
y_s      = poar_allsites.surv$surv_t1,
n_s      = nrow(poar_allsites.surv)
)
poar_sites_annual.surv
fit_allsites_surv_annual <- stan(
file = "/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/stan/poar_survivalannual.stan",
data = poar_sites_annual.surv,
warmup = sim_pars$warmup,
iter = sim_pars$iter,
thin = sim_pars$thin,
chains = sim_pars$chains)
