group_by(site,census.year,Season) %>%
dplyr::summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),ppt_season = sum(ppt))->poar_pptseason
poar_climseason<- merge(x = poar_tempseason, y = poar_pptseason) # merge temperature and precipitation data
###
poar_allsites.clim_season <- left_join(x = poar_allsites_2015_2016 ,y =poar_climseason,by=c("site","census.year","Longitude","Latitude")) # merge the demographic data with climatic data for each site
poar_allsites.clim_season %>%
filter(Season=="growing") %>%
mutate(tempgrow=temp_season,pptgrow=ppt_season)->poar_allsites.clim_season_grow
# head(poar_allsites.clim_season_grow)
# head(poar_allsites.clim_season_dorm)
poar_allsites.clim_season %>%
filter(Season=="dormant") %>%
mutate(tempdorm=temp_season,pptdorm=ppt_season)->poar_allsites.clim_season_dorm
poar.clim_seasonal<- cbind(poar_allsites.clim_season_grow,tempdorm=poar_allsites.clim_season_dorm$tempdorm,pptdorm=poar_allsites.clim_season_dorm$pptdorm)
# poar.clim_seasonal$Longitude<-poar.clim_seasonal$Longitude.x
# poar.clim_seasonal$Latitude <-poar.clim_seasonal$Latitude.y
# poar.clim_seasonal %>%
#   mutate( pptgrow   = pptgrow %>% scale %>% .[,1],
#           tempgrow = tempgrow %>% scale %>% .[,1],
#           pptdorm = pptdorm %>% scale %>% .[,1],
#           tempdorm= tempdorm %>% scale %>% .[,1])->zpoar.clim_seasonal
# source("/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/twosexMPM.R")
source("/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/twosexMPMLTRE.R")
# source("/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/twosexMPM.R")
source("/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/twosexMPMLTRE.R")
# source("C:/Users/tm9/Dropbox/github/POAR-Forecasting/twosexMPMLTRE.R")
POAU <- read.csv("https://www.dropbox.com/s/7f2yfz49fzrcp5i/POAU.csv?dl=1")
sdlg_surv <- POAU %>% filter(year_recruit==year_t,year_t %in% 2014:2016) %>% summarise(sdlg_surv = mean(spring_survival_t1,na.rm=T))
mean_coefs<- lapply(rstan::extract(fit_survival, pars = c("b0_s","bsizesex_s","btempdormpptdorm_s","btempgrowpptgrow_s","bsex_s", "bsize_s","bpptgrow_s","bpptdorm_s","btempgrow_s","btempdorm_s","bpptgrowsex_s","bpptdormsex_s","btempgrowsex_s","btempdormsex_s","btempdormpptdormsex_s","btempgrowpptgrowsex_s","bpptgrow2_s","bpptdorm2_s","btempgrow2_s","btempdorm2_s","bpptgrow2sex_s","bpptdorm2sex_s","btempgrow2sex_s","btempdorm2sex_s")) ,mean)
#load stan output -- this will also take a while, but not as long as running the model from scratch
fit_survival <- readRDS(url("https://www.dropbox.com/s/xr3zrapbwimsfa5/poar_survival_seasonpolynomial.rds?dl=1"))
fit_growth<-readRDS(url("https://www.dropbox.com/s/onie8qtrzer8cme/poar_growth_seasonpolynomial.rds?dl=1"))
fit_flow<-readRDS(url("https://www.dropbox.com/s/o5r2hijb256fmb7/poar_flow_seasonpolynomial.rds?dl=1"))
fit_panicle<-readRDS(url("https://www.dropbox.com/scl/fi/fk2xfh57ao6knpu69aamm/poar_panicle_seasonpolynomial.rds?rlkey=p8tpilkzx3vabnp1qk8up6aud&dl=1"))
fit_viability<-readRDS(url("https://www.dropbox.com/scl/fi/ig1c0vf2sxq2qmsncs9sm/poar_viability.rds?rlkey=73cvtqef95kmyq1637s1f2s0d&dl=1"))
mean_coefs<- lapply(rstan::extract(fit_survival, pars = c("b0_s","bsizesex_s","btempdormpptdorm_s","btempgrowpptgrow_s","bsex_s", "bsize_s","bpptgrow_s","bpptdorm_s","btempgrow_s","btempdorm_s","bpptgrowsex_s","bpptdormsex_s","btempgrowsex_s","btempdormsex_s","btempdormpptdormsex_s","btempgrowpptgrowsex_s","bpptgrow2_s","bpptdorm2_s","btempgrow2_s","btempdorm2_s","bpptgrow2sex_s","bpptdorm2sex_s","btempgrow2sex_s","btempdorm2sex_s")) ,mean)
mean_coefg<- lapply(rstan::extract(fit_growth, pars = c("b0_g","btempdormpptdorm_g","btempgrowpptgrow_g","bsizesex_g","bsex_g", "bsize_g","bpptgrow_g","bpptdorm_g","btempgrow_g","btempdorm_g","bpptgrowsex_g","bpptdormsex_g","btempgrowsex_g","btempdormsex_g","btempdormpptdormsex_g","btempgrowpptgrowsex_g","bpptgrow2_g","bpptdorm2_g","btempgrow2_g","btempdorm2_g","bpptgrow2sex_g","bpptdorm2sex_g","btempgrow2sex_g","btempdorm2sex_g","sigma")) ,mean)
mean_coeff<- lapply(rstan::extract(fit_flow, pars = c("b0_f","bsizesex_f","bsex_f", "bsize_f","bpptgrow_f","bpptdorm_f","btempgrow_f","btempdorm_f","bpptgrowsex_f","bpptdormsex_f","btempgrowsex_f","btempdormsex_f","btempdormpptdorm_f","btempgrowpptgrow_f","btempdormpptdormsex_f","btempgrowpptgrowsex_f","bpptgrow2_f","bpptdorm2_f","btempgrow2_f","btempdorm2_f","bpptgrow2sex_f","bpptdorm2sex_f","btempgrow2sex_f","btempdorm2sex_f")) ,mean)
mean_coefp<- lapply(rstan::extract(fit_panicle, pars = c("b0_p","bsex_p","bsex_p","bsizesex_p", "bsize_p","bpptgrow_p","bpptdorm_p","btempgrow_p","btempdorm_p","bpptgrowsex_p","bpptdormsex_p","btempgrowsex_p","btempdormsex_p","btempdormpptdorm_p","btempgrowpptgrow_p","btempdormpptdormsex_p","btempgrowpptgrowsex_p","bpptgrow2_p","bpptdorm2_p","btempgrow2_p","btempdorm2_p","bpptgrow2sex_p","bpptdorm2sex_p","btempgrow2sex_p","btempdorm2sex_p")) ,mean)
mean_coefv<-lapply(rstan::extract(fit_viability, pars = c("v0","a_v","m","lambda_d")) ,mean)
F_params <- M_params <- c()
## survival
F_params$surv_mu <- mean_coefs$b0_s
F_params$surv_size <- mean_coefs$bsize_s
F_params$surv_pptgrow <- mean_coefs$bpptgrow_s
F_params$surv_pptdorm <- mean_coefs$bpptdorm_s
F_params$surv_tempgrow <- mean_coefs$btempgrow_s
F_params$surv_tempdorm <- mean_coefs$btempdorm_s
F_params$surv_tempdorm_pptdorm<-mean_coefs$btempdormpptdorm_s
F_params$surv_tempgrow_pptgrow<-mean_coefs$btempgrowpptgrow_s
F_params$surv_pptgrow2<-mean_coefs$bpptgrow2_s
F_params$surv_pptdorm2<-mean_coefs$bpptdorm2_s
F_params$surv_tempgrow2<-mean_coefs$btempgrow2_s
F_params$surv_tempdorm2<-mean_coefs$btempdorm2_s
M_params$surv_mu <- mean_coefs$b0_s + mean_coefs$bsex_s
M_params$surv_size <- mean_coefs$bsize_s + mean_coefs$bsizesex_s
M_params$surv_pptgrow <- mean_coefs$bpptgrow_s  + mean_coefs$bpptgrowsex_s
M_params$surv_pptdorm <- mean_coefs$bpptdorm_s  + mean_coefs$bpptdormsex_s
M_params$surv_tempgrow <- mean_coefs$btempgrow_s + mean_coefs$btempgrowsex_s #
M_params$surv_tempdorm <-  mean_coefs$btempdorm_s  + mean_coefs$btempdormsex_s
M_params$surv_tempdorm_pptdorm<-mean_coefs$btempdormpptdorm_s + mean_coefs$btempdormpptdormsex_s
M_params$surv_tempgrow_pptgrow<-mean_coefs$btempgrowpptgrow_s + mean_coefs$btempgrowpptgrowsex_s
M_params$surv_pptgrow2<-mean_coefs$bpptgrow2_s + mean_coefs$bpptgrow2sex_s
M_params$surv_pptdorm2<-mean_coefs$bpptdorm2_s + mean_coefs$bpptdorm2sex_s
M_params$surv_tempgrow2<-mean_coefs$btempgrow2_s + mean_coefs$btempgrow2sex_s
M_params$surv_tempdorm2<-mean_coefs$btempdorm2_s + mean_coefs$btempdorm2sex_s
## growth
F_params$grow_mu <- mean_coefg$b0_g
F_params$grow_size <- mean_coefg$bsize_g
F_params$grow_pptgrow <- mean_coefg$bpptgrow_g
F_params$grow_pptdorm <- mean_coefg$bpptdorm_g
F_params$grow_tempgrow <- mean_coefg$btempgrow_g
F_params$grow_tempdorm <- mean_coefg$btempdorm_g
F_params$grow_tempdorm_pptdorm<-mean_coefg$btempdormpptdorm_g
F_params$grow_tempgrow_pptgrow<-mean_coefg$btempgrowpptgrow_g
F_params$grow_pptgrow2<-mean_coefg$bpptgrow2_g
F_params$grow_pptdorm2<-mean_coefg$bpptdorm2_g
F_params$grow_tempgrow2<-mean_coefg$btempgrow2_g
F_params$grow_tempdorm2<-mean_coefg$btempdorm2_g
F_params$sigma_g <- mean_coefg$sigma
M_params$grow_mu <- mean_coefg$b0_g + mean_coefg$bsex_g
M_params$grow_size <- mean_coefg$bsize_g + mean_coefg$bsizesex_g
M_params$grow_pptgrow <- mean_coefg$bpptgrow_g  + mean_coefg$bpptgrowsex_g
M_params$grow_pptdorm <- mean_coefg$bpptdorm_g  + mean_coefg$bpptdormsex_g
M_params$grow_tempgrow <- mean_coefg$btempgrow_g + mean_coefg$btempgrowsex_g #
M_params$grow_tempdorm <-  mean_coefg$btempdorm_g  + mean_coefg$btempdormsex_g
M_params$grow_tempdorm_pptdorm<-mean_coefg$btempdormpptdorm_g + mean_coefg$btempdormpptdormsex_g
M_params$grow_tempgrow_pptgrow<-mean_coefg$btempgrowpptgrow_g + mean_coefg$btempgrowpptgrowsex_g
M_params$grow_pptgrow2<-mean_coefg$bpptgrow2_g + mean_coefg$bpptgrow2sex_g
M_params$grow_pptdorm2<-mean_coefg$bpptdorm2_g + mean_coefg$bpptdorm2sex_g
M_params$grow_tempgrow2<-mean_coefg$btempgrow2_g + mean_coefg$btempgrow2sex_g
M_params$grow_tempdorm2<-mean_coefg$btempdorm2_g + mean_coefg$btempdorm2sex_g
M_params$sigma_g <- mean_coefg$sigma
## flowering
F_params$flow_mu <- mean_coeff$b0_f
F_params$flow_size <- mean_coeff$bsize_f
F_params$flow_pptgrow <- mean_coeff$bpptgrow_f
F_params$flow_pptdorm <- mean_coeff$bpptdorm_f
F_params$flow_tempgrow <- mean_coeff$btempgrow_f
F_params$flow_tempdorm <- mean_coeff$btempdorm_f
F_params$flow_tempdorm_pptdorm<-mean_coeff$btempdormpptdorm_f
F_params$flow_tempgrow_pptgrow<-mean_coeff$btempgrowpptgrow_f
F_params$flow_pptgrow2<-mean_coeff$bpptgrow2_f
F_params$flow_pptdorm2<-mean_coeff$bpptdorm2_f
F_params$flow_tempgrow2<-mean_coeff$btempgrow2_f
F_params$flow_tempdorm2<-mean_coeff$btempdorm2_f
M_params$flow_mu <- mean_coeff$b0_f + mean_coeff$bsex_f
M_params$flow_size <- mean_coeff$bsize_f + mean_coeff$bsizesex_f
M_params$flow_pptgrow <- mean_coeff$bpptgrow_f  + mean_coeff$bpptgrowsex_f
M_params$flow_pptdorm <- mean_coeff$bpptdorm_f  + mean_coeff$bpptdormsex_f
M_params$flow_tempgrow <- mean_coeff$btempgrow_f + mean_coeff$btempgrowsex_f #
M_params$flow_tempdorm <-  mean_coeff$btempdorm_f  + mean_coeff$btempdormsex_f
M_params$flow_tempdorm_pptdorm<-mean_coeff$btempdormpptdorm_f + mean_coeff$btempdormpptdormsex_f
M_params$flow_tempgrow_pptgrow<-mean_coeff$btempgrowpptgrow_f + mean_coeff$btempgrowpptgrowsex_f
M_params$flow_pptgrow2<-mean_coeff$bpptgrow2_f + mean_coeff$bpptgrow2sex_f
M_params$flow_pptdorm2<-mean_coeff$bpptdorm2_f + mean_coeff$bpptdorm2sex_f
M_params$flow_tempgrow2<-mean_coeff$btempgrow2_f + mean_coeff$btempgrow2sex_f
M_params$flow_tempdorm2<-mean_coeff$btempdorm2_f + mean_coeff$btempdorm2sex_f
## panicles
F_params$panic_mu <- mean_coefp$b0_p
F_params$panic_size <- mean_coefp$bsize_p
F_params$panic_pptgrow <- mean_coefp$bpptgrow_p
F_params$panic_pptdorm <- mean_coefp$bpptdorm_p
F_params$panic_tempgrow <- mean_coefp$btempgrow_p
F_params$panic_tempdorm <- mean_coefp$btempdorm_p
F_params$panic_tempdorm_pptdorm<-mean_coefp$btempdormpptdorm_p
F_params$panic_tempgrow_pptgrow<-mean_coefp$btempgrowpptgrow_p
F_params$panic_pptgrow2<-mean_coefp$bpptgrow2_p
F_params$panic_pptdorm2<-mean_coefp$bpptdorm2_p
F_params$panic_tempgrow2<-mean_coefp$btempgrow2_p
F_params$panic_tempdorm2<-mean_coefp$btempdorm2_p
M_params$panic_mu <- mean_coefp$b0_p + mean_coefp$bsex_p
M_params$panic_size <- mean_coefp$bsize_p + mean_coefp$bsizesex_p
M_params$panic_pptgrow <- mean_coefp$bpptgrow_p  + mean_coefp$bpptgrowsex_p
M_params$panic_pptdorm <- mean_coefp$bpptdorm_p  + mean_coefp$bpptdormsex_p
M_params$panic_tempgrow <- mean_coefp$btempgrow_p + mean_coefp$btempgrowsex_p #
M_params$panic_tempdorm <-  mean_coefp$btempdorm_p  + mean_coefp$btempdormsex_p
M_params$panic_tempdorm_pptdorm<-mean_coefp$btempdormpptdorm_p + mean_coefp$btempdormpptdormsex_p
M_params$panic_tempgrow_pptgrow<-mean_coefp$btempgrowpptgrow_p + mean_coefp$btempgrowpptgrowsex_p
M_params$panic_pptgrow2<-mean_coefp$bpptgrow2_p + mean_coefp$bpptgrow2sex_p
M_params$panic_pptdorm2<-mean_coefp$bpptdorm2_p + mean_coefp$bpptdorm2sex_p
M_params$panic_tempgrow2<-mean_coefp$btempgrow2_p + mean_coefp$btempgrow2sex_p
M_params$panic_tempdorm2<-mean_coefp$btempdorm2_p + mean_coefp$btempdorm2sex_p
## seed viability and misc fertility params
F_params$v0 <- mean_coefv$v0
F_params$a_v <- mean_coefv$a_v
F_params$ov_per_inf <- mean_coefv$lambda_d
F_params$germ <- mean_coefv$m
F_params$PSR <- 0.5
## use POAU seedling survival for females and males
F_params$sdlg_surv <- M_params$sdlg_surv <- sdlg_surv$sdlg_surv
## set max size equal between the sexes
F_params$max_size <- M_params$max_size <- round(quantile(na.omit((poar.clim_seasonal$tillerN_t1)),probs=0.99))
F_params=F_params
M_params=M_params
twosex=F
grow_perturb=0
surv_perturb=0
flow_perturb=0
fert_perturb=0
viab_perturb=0
pptgrow=mean(poarclim_seasonal.mean$pptgrow)
poar.clim_seasonal %>%
subset( tillerN_t0 > 0 & tillerN_t1 > 0)%>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
group_by(site) %>%
summarise( Longitude=unique(Longitude),
Latitude=unique(Latitude),
size = mean(tillerN_t1),
pptgrow= mean(pptgrow),
temprow= mean(tempgrow),
pptdorm= mean(pptdorm),
tempdorm= mean(tempdorm))->poarclim_seasonal.mean
climmean<- data.frame(mean_size=rep(mean(poarclim_seasonal.mean$size),nrow(poarclim_seasonal.mean)),mean_pptgrow=rep(mean(poarclim_seasonal.mean$pptgrow),nrow(poarclim_seasonal.mean)),mean_temprow=rep(mean(poarclim_seasonal.mean$temprow),nrow(poarclim_seasonal.mean)),mean_pptdorm=rep(mean(poarclim_seasonal.mean$pptdorm),nrow(poarclim_seasonal.mean)),mean_tempdorm=rep(mean(poarclim_seasonal.mean$tempdorm),nrow(poarclim_seasonal.mean)))
poarclim_seasonal.meanplot<-data.frame(poarclim_seasonal.mean,climmean)
# poarclim_seasonal.mean<-as.data.frame(poarclim_seasonal.mean)
pptgrow=mean(poarclim_seasonal.mean$pptgrow)
tempgrow=mean(poarclim_seasonal.mean$temprow)
pptdorm=mean(poarclim_seasonal.mean$pptdorm)
tempdorm=mean(poarclim_seasonal.mean$tempdorm)
rfx=rfx_fun()
# vital rate and megamatrix functions ---------------------------------------------------
invlogit<-function(x){exp(x)/(1+exp(x))}
#SURVIVAL AT SIZE X.
sx<-function(x,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,surv_perturb=0){
x_scaled_s=(x-7.768868)/9.855441
pptgrow_scaled_s=(pptgrow-752.6118)/336.1784
pptdorm_scaled_s=(pptdorm-379.6936)/146.842
tempgrow_scaled_s=(tempgrow- 15.02675)/3.137914
tempdorm_scaled_s=(tempdorm-27.36059)/3.137914
surv_mean<-params$surv_mu +
params$surv_size*x_scaled_s +
params$surv_pptgrow*pptgrow_scaled_s +
params$surv_pptdorm*pptdorm_scaled_s +
params$surv_tempgrow*tempgrow_scaled_s +
params$surv_tempdorm*tempdorm_scaled_s +
params$surv_tempdorm_pptdorm*tempdorm_scaled_s*pptdorm_scaled_s +
params$surv_tempgrow_pptgrow*tempgrow_scaled_s*pptgrow_scaled_s +
params$surv_pptgrow2*(pptgrow_scaled_s^2) +
params$surv_pptdorm2*(pptdorm_scaled_s^2) +
params$surv_tempgrow2*(tempgrow_scaled_s^2) +
params$surv_tempdorm2*(tempdorm_scaled_s^2) +
rfx["surv","site"] + rfx["surv","block"] + rfx["surv","source"]
#return(invlogit(surv_mean)+ surv_perturb)
return(1)
}
plot(sx(x=1:40,
params=M_params,
pptgrow,pptdorm,tempgrow,tempdorm,rfx))
#SURVIVAL AT SIZE X.
sx<-function(x,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,surv_perturb=0){
x_scaled_s=(x-7.768868)/9.855441
pptgrow_scaled_s=(pptgrow-752.6118)/336.1784
pptdorm_scaled_s=(pptdorm-379.6936)/146.842
tempgrow_scaled_s=(tempgrow- 15.02675)/3.137914
tempdorm_scaled_s=(tempdorm-27.36059)/3.137914
surv_mean<-params$surv_mu +
params$surv_size*x_scaled_s +
params$surv_pptgrow*pptgrow_scaled_s +
params$surv_pptdorm*pptdorm_scaled_s +
params$surv_tempgrow*tempgrow_scaled_s +
params$surv_tempdorm*tempdorm_scaled_s +
params$surv_tempdorm_pptdorm*tempdorm_scaled_s*pptdorm_scaled_s +
params$surv_tempgrow_pptgrow*tempgrow_scaled_s*pptgrow_scaled_s +
params$surv_pptgrow2*(pptgrow_scaled_s^2) +
params$surv_pptdorm2*(pptdorm_scaled_s^2) +
params$surv_tempgrow2*(tempgrow_scaled_s^2) +
params$surv_tempdorm2*(tempdorm_scaled_s^2) +
rfx["surv","site"] + rfx["surv","block"] + rfx["surv","source"]
return(invlogit(surv_mean)+ surv_perturb)
}
plot(sx(x=1:40,
params=M_params,
pptgrow,pptdorm,tempgrow,tempdorm,rfx))
#PROBABILITY OF GROWTH FROM SIZE X TO Y
#This function truncates the density asscociation with x==0 and x>x.max
gxy<-function(x,y,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,grow_perturb=0){
#x_scaled_g=(x-9.019255)/10.83937
pptgrow_scaled_g=(pptgrow-709.7987)/338.7739
pptdorm_scaled_g=(pptdorm-369.8298)/143.5237
tempgrow_scaled_g=(tempgrow-15.16865)/3.149584
tempdorm_scaled_g=(tempdorm- 27.34114)/1.468994
grow_mean<-exp(params$grow_mu +
params$grow_size*log(x) +
params$grow_pptgrow*pptgrow_scaled_g +
params$grow_pptdorm*pptdorm_scaled_g +
params$grow_tempgrow*tempgrow_scaled_g +
params$grow_tempdorm*tempdorm_scaled_g +
params$grow_tempdorm_pptdorm*tempdorm_scaled_g*pptdorm_scaled_g +
params$grow_tempgrow_pptgrow*tempgrow_scaled_g*pptgrow_scaled_g +
params$grow_pptgrow2*(pptgrow_scaled_g^2) +
params$grow_pptdorm2*(pptdorm_scaled_g^2) +
params$grow_tempgrow2*(tempgrow_scaled_g^2) +
params$grow_tempdorm2*(tempdorm_scaled_g^2) +
rfx["grow","site"] + rfx["grow","block"] + rfx["grow","source"]) + grow_perturb
# grow<-dpoisinvgauss(x=y,mean=grow_mean,shape=grow_mean*params$sigma_g)
# truncZero<-dpoisinvgauss(x=0,mean=grow_mean,shape=grow_mean*params$sigma_g)
# return(grow/(1-truncZero))
grow<-dpoisinvgauss(x=y,mean=grow_mean,shape=(grow_mean*params$sigma_g))
grow<-ifelse(is.nan(grow) | is.infinite(grow),0,grow)
truncLower<-dpoisinvgauss(x=0,mean=grow_mean,shape=(grow_mean*params$sigma_g))
truncUpper<-dpoisinvgauss(x=params$max_size:10000,mean=grow_mean,shape=(grow_mean*params$sigma_g))
truncUpper<-sum(ifelse(is.nan(truncUpper) | is.infinite(truncUpper),0,truncUpper))
return(grow/(1-(truncLower+truncUpper)))
}
#
sum(gxy(1,1:100000,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx))
#
sum(gxy(1,1:125,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx))
#
sum(gxy(1,1:12,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx))
#
sum(gxy(1,1:5,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx))
#
sum(gxy(1:35,1:125,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx))
#
sum(gxy(1,1:125,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx))
#
sum(gxy(1,1:120,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx))
#
sum(gxy(1,1:100,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx))
#
# sum(gxy(1,1:100,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx))
#
sum(gxy(F_params$max_size,1:1000,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx))
plot(gxy(x,y,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx))
y=1:40
plot(gxy(x=y,y=y,params=F_params,pptgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptgrow)),pptdorm=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptdorm)),tempgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$tempgrow)),tempdorm=mean(poarclim_seasonal.sur_mean_sd$tempdorm),rfx=rfx,grow_perturb=0))
y=1:40
plot(gxy(x=y,y=y,params=F_params,pptgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptgrow)),pptdorm=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptdorm)),tempgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$tempgrow)),tempdorm=mean(poarclim_seasonal.sur_mean_sd$tempdorm),rfx=rfx,grow_perturb=0))
plot(gxy(x=y,y=y,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx=rfx,grow_perturb=0))
#SURVIVAL*GROWTH
pxy<-function(x,y,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,surv_perturb=0,grow_perturb=0){
sx(x,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,surv_perturb) * gxy(x,y,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,grow_perturb)
}
y=1:40
plot(pxy(x=y,y=y,params=F_params,pptgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptgrow)),pptdorm=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptdorm)),tempgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$tempgrow)),tempdorm=mean(poarclim_seasonal.sur_mean_sd$tempdorm),rfx=rfx,surv_perturb=0))
y=1:40
plot(pxy(x=y,y=y,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx=rfx,surv_perturb=0))
# PROBABILITY OF FLOWERING
pfx<-function(x,params, pptgrow,pptdorm,tempgrow,tempdorm,rfx,flow_perturb=0){
x_scaled_f=(x-19.39529)/38.72338
pptgrow_scaled_f=(pptgrow-706.8709 )/339.4783
pptdorm_scaled_f=(pptdorm-366.5321)/140.0161
tempgrow_scaled_f=(tempgrow-15.2168)/3.142949
tempdorm_scaled_f=(tempdorm-27.34905)/1.453832
flow_mean<-params$flow_mu +
params$flow_size*x_scaled_f +
params$flow_pptgrow*pptgrow_scaled_f +
params$flow_pptdorm*pptdorm_scaled_f +
params$flow_tempgrow*tempgrow_scaled_f +
params$flow_tempdorm*tempdorm_scaled_f +
params$flow_tempdorm_pptdorm*tempdorm_scaled_f*pptdorm_scaled_f +
params$flow_tempgrow_pptgrow*tempgrow_scaled_f*pptgrow_scaled_f +
params$flow_pptgrow2*(pptgrow_scaled_f^2) +
params$flow_pptdorm2*(pptdorm_scaled_f^2) +
params$flow_tempgrow2*(tempgrow_scaled_f^2) +
params$flow_tempdorm2*(tempdorm_scaled_f^2) +
rfx["flow","site"] + rfx["flow","block"] + rfx["flow","source"]
return(invlogit(flow_mean) + flow_perturb )
}
y=1:40
plot(pfx(x=y,params=F_params,pptgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptgrow)),pptdorm=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptdorm)),tempgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$tempgrow)),tempdorm=mean(poarclim_seasonal.sur_mean_sd$tempdorm),rfx=rfx,flow_perturb=0))
plot(pfx(x=y,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx=rfx,flow_perturb=0))
#NUMBER OF PANICLES
nfx<-function(x,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,fert_perturb=0){
x_scaled_p=(x-38.78495)/58.04579
pptgrow_scaled_p=(pptgrow-564.0412)/273.6934
pptdorm_scaled_p=(pptdorm-342.8549)/134.8506
tempgrow_scaled_p=(tempgrow-14.40408)/2.964567
tempdorm_scaled_p=(tempdorm-27.02796)/1.43082
panic_mean<-params$panic_mu +
params$panic_size*x_scaled_p +
params$panic_pptgrow*pptgrow_scaled_p +
params$panic_pptdorm*pptdorm_scaled_p +
params$panic_tempgrow*tempgrow_scaled_p +
params$panic_tempdorm*tempdorm_scaled_p +
params$panic_tempdorm_pptdorm*tempdorm_scaled_p*pptdorm_scaled_p +
params$panic_tempgrow_pptgrow*tempgrow_scaled_p*pptgrow_scaled_p +
params$panic_pptgrow2*(pptgrow_scaled_p^2) +
params$panic_pptdorm2*(pptdorm_scaled_p^2) +
params$panic_tempgrow2*(tempgrow_scaled_p^2) +
params$panic_tempdorm2*(tempdorm_scaled_p^2) +
rfx["panic","site"] + rfx["panic","block"] + rfx["panic","source"]
return(exp(panic_mean) + fert_perturb)
}
y=1:40
plot(pfx(x=y,params=F_params,pptgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptgrow)),pptdorm=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptdorm)),tempgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$tempgrow)),tempdorm=mean(poarclim_seasonal.sur_mean_sd$tempdorm),rfx=rfx,flow_perturb=0))
plot(pfx(x=y,params=F_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx=rfx,flow_perturb=0))
#SEED VIABILITY
viab<-function(params,twosex,OSR=NULL,viab_perturb=0){
if(twosex==F){return(params$v0 + viab_perturb)}
if(twosex==T){return((params$v0 * (1 - OSR ^ params$a_v))+ viab_perturb)}
}
#FERTILITY--returns number of recruits
##Female offspring
fertx_F<-function(x,params,rfx,pptgrow,pptdorm,tempgrow,tempdorm,twosex,OSR=NULL,flow_perturb=0,fert_perturb=0,viab_perturb=0){
seedlings<-pfx(x,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,flow_perturb)*nfx(x,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,fert_perturb)*params$ov_per_inf*viab(params,twosex,OSR,viab_perturb)*params$germ*params$PSR
return(seedlings)
}
y=1:40
plot(fertx_F(x=y,params=F_params,rfx=rfx,twosex=F,OSR=NULL,pptgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptgrow)),pptdorm=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptdorm)),tempgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$tempgrow)),tempdorm=mean(poarclim_seasonal.sur_mean_sd$tempdorm),flow_perturb=0,fert_perturb=0,viab_perturb=0))
y=1:40
plot(fertx_F(x=y,params=F_params,rfx=rfx,twosex=F,OSR=NULL,pptgrow,pptdorm,tempgrow,tempdorm,flow_perturb=0,fert_perturb=0,viab_perturb=0))
##Male offspring
fertx_M<-function(x,params,rfx,pptgrow,pptdorm,tempgrow,tempdorm,twosex,OSR=NULL,flow_perturb=0,fert_perturb=0,viab_perturb=0){
seedlings<-pfx(x,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,flow_perturb)*nfx(x,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,fert_perturb)*params$ov_per_inf*viab(params,twosex,OSR,viab_perturb)*params$germ*(1-params$PSR)
return(seedlings)
}
y=1:40
plot(fertx_M(x=y,params=M_params,rfx=rfx,twosex=F,OSR=NULL,pptgrow,pptdorm,tempgrow,tempdorm,flow_perturb=0,fert_perturb=0,viab_perturb=0))
y=1:40
plot(fertx_M(x=y,params=M_params,rfx=rfx,twosex=F,OSR=NULL,pptgrow,pptdorm,tempgrow,tempdorm,flow_perturb=0,fert_perturb=0,viab_perturb=0))
y=1:40
plot(fertx_M(x=y,params=F_params,rfx=rfx,twosex=F,OSR=NULL,pptgrow,pptdorm,tempgrow,tempdorm,flow_perturb=0,fert_perturb=0,viab_perturb=0))
F_params$max_size
matdim<-F_params$max_size
y<-1:F_params$max_size
## F-to-F (growth/survival transition)
F.Tmat<-matrix(0,matdim+1,matdim+1)
F.Tmat[2:(matdim+1),2:(matdim+1)]
test<-t(outer(y,y,pxy,params=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,surv_perturb=surv_perturb, grow_perturb=grow_perturb))
test<-t(outer(y,y,gxy,params=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb))
# surviving seedlings emerge in continuous population
F.Tmat[2:(matdim+1),1] <- gxy(x=1,y=y,params=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb) * (M_params$sdlg_surv + surv_perturb)
# F-to-F Fertility transition
F.Fmat<-matrix(0,matdim+1,matdim+1)
# seedlings in top row
F.Fmat[1,2:(matdim+1)]<-fertx_F(x=y,params=F_params,rfx=rfx,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=twosex,OSR=OSR,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb)
## M-to-M (growth/survival transition)
M.Tmat<-matrix(0,matdim+1,matdim+1)
M.Tmat[2:(matdim+1),2:(matdim+1)]<-t(outer(y,y,pxy,params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,surv_perturb=surv_perturb, grow_perturb=grow_perturb))
M.Tmat[2:(matdim+1),1] <- gxy(x=1,y=y,params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb) * (M_params$sdlg_surv + surv_perturb)
# F-to-M Fertility transition
M.Fmat<-matrix(0,matdim+1,matdim+1)
M.Fmat[1,2:(matdim+1)]<-fertx_M(x=y,params=F_params,rfx=rfx,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=twosex,OSR=OSR,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb)
#M-to-F
zero.mat<-matrix(0,matdim+1,matdim+1)
# Put it all together as a megamatrix
MEGAmat<-cbind(rbind(F.Tmat+F.Fmat,  ##Female growth/survival + recruitment[1,1]
M.Fmat), ##Male recruitment [2,1]
rbind(zero.mat,   ##Females from males [1,2]
M.Tmat))   ##Male growth/survival
popbio::lambda(MEGAmat)
matdim<-F_params$max_size
y<-1:F_params$max_size
lambdatracker      <- rep(0,max.yrs)
max.yrs=10
matdim<-F_params$max_size
y<-1:F_params$max_size
lambdatracker      <- rep(0,max.yrs)
OSRtracker   <- rep(0,max.yrs)
SRtracker   <- rep(0,max.yrs)
n0            <- rep(1/((matdim+1)*2),((matdim+1)*2))
##Estimate panicle SR
flowering_females<-n0[2:(matdim+1)]*pfx(x=y,param=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,flow_perturb=flow_perturb) ## scalar multiplication to weight females by flowering prob
F_panicles<-flowering_females%*%nfx(x=y,param=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,fert_perturb=fert_perturb) ##Vector operation to sum female panicles
flowering_males<-n0[(matdim+3):((matdim+1)*2)]*pfx(x=y,param=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,flow_perturb=flow_perturb)
M_panicles<-flowering_males%*%nfx(x=y,param=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,fert_perturb=fert_perturb)
OSRtracker[t]<-F_panicles/(F_panicles+M_panicles) ##Panicle sex ratio (proportion female)
t=1
OSRtracker[t]<-F_panicles/(F_panicles+M_panicles) ##Panicle sex ratio (proportion female)
SRtracker[t]<-sum(n0[1:(matdim+1)])
#assmble matrix
MEGAmat<-megamatrix_delay(F_params=F_params,M_params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=T,OSR=OSRtracker[t],rfx=rfx,
grow_perturb=grow_perturb,surv_perturb=surv_perturb,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb
)$MEGAmat
n0 <- MEGAmat[,] %*% n0
N  <- sum(n0)
lambdatracker[t]<-N
n0 <-n0/N
n0
N
lambdatracker
n0
MEGAmat
popbio::lambda(MEGAmat)
n0 <- MEGAmat[,] %*% n0
n0
N  <- sum(n0)
N
lambdatracker
for(t in 1:max.yrs){
##Estimate panicle SR
flowering_females<-n0[2:(matdim+1)]*pfx(x=y,param=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,flow_perturb=flow_perturb) ## scalar multiplication to weight females by flowering prob
F_panicles<-flowering_females%*%nfx(x=y,param=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,fert_perturb=fert_perturb) ##Vector operation to sum female panicles
flowering_males<-n0[(matdim+3):((matdim+1)*2)]*pfx(x=y,param=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,flow_perturb=flow_perturb)
M_panicles<-flowering_males%*%nfx(x=y,param=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,fert_perturb=fert_perturb)
OSRtracker[t]<-F_panicles/(F_panicles+M_panicles) ##Panicle sex ratio (proportion female)
SRtracker[t]<-sum(n0[1:(matdim+1)])
#assmble matrix
MEGAmat<-megamatrix_delay(F_params=F_params,M_params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=T,OSR=OSRtracker[t],rfx=rfx,
grow_perturb=grow_perturb,surv_perturb=surv_perturb,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb
)$MEGAmat
n0 <- MEGAmat[,] %*% n0
N  <- sum(n0)
lambdatracker[t]<-N
n0 <-n0/N
}
grow_perturb=0
surv_perturb=0
flow_perturb=0
fert_perturb=0
viab_perturb=0
for(t in 1:max.yrs){
##Estimate panicle SR
flowering_females<-n0[2:(matdim+1)]*pfx(x=y,param=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,flow_perturb=flow_perturb) ## scalar multiplication to weight females by flowering prob
F_panicles<-flowering_females%*%nfx(x=y,param=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,fert_perturb=fert_perturb) ##Vector operation to sum female panicles
flowering_males<-n0[(matdim+3):((matdim+1)*2)]*pfx(x=y,param=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,flow_perturb=flow_perturb)
M_panicles<-flowering_males%*%nfx(x=y,param=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,fert_perturb=fert_perturb)
OSRtracker[t]<-F_panicles/(F_panicles+M_panicles) ##Panicle sex ratio (proportion female)
SRtracker[t]<-sum(n0[1:(matdim+1)])
#assmble matrix
MEGAmat<-megamatrix_delay(F_params=F_params,M_params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=T,OSR=OSRtracker[t],rfx=rfx,
grow_perturb=grow_perturb,surv_perturb=surv_perturb,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb
)$MEGAmat
n0 <- MEGAmat[,] %*% n0
N  <- sum(n0)
lambdatracker[t]<-N
n0 <-n0/N
}
lambdaSim_delay<-function(F_params,M_params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,max.yrs,
grow_perturb=0,surv_perturb=0,flow_perturb=0,fert_perturb=0,viab_perturb=0){
matdim<-F_params$max_size
y<-1:F_params$max_size
lambdatracker      <- rep(0,max.yrs)
OSRtracker   <- rep(0,max.yrs)
SRtracker   <- rep(0,max.yrs)
n0            <- rep(1/((matdim+1)*2),((matdim+1)*2))
for(t in 1:max.yrs){
##Estimate panicle SR
flowering_females<-n0[2:(matdim+1)]*pfx(x=y,param=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,flow_perturb=flow_perturb) ## scalar multiplication to weight females by flowering prob
F_panicles<-flowering_females%*%nfx(x=y,param=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,fert_perturb=fert_perturb) ##Vector operation to sum female panicles
flowering_males<-n0[(matdim+3):((matdim+1)*2)]*pfx(x=y,param=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,flow_perturb=flow_perturb)
M_panicles<-flowering_males%*%nfx(x=y,param=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,fert_perturb=fert_perturb)
OSRtracker[t]<-F_panicles/(F_panicles+M_panicles) ##Panicle sex ratio (proportion female)
SRtracker[t]<-sum(n0[1:(matdim+1)])
#assmble matrix
MEGAmat<-megamatrix_delay(F_params=F_params,M_params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=T,OSR=OSRtracker[t],rfx=rfx,
grow_perturb=grow_perturb,surv_perturb=surv_perturb,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb
)$MEGAmat
n0 <- MEGAmat[,] %*% n0
N  <- sum(n0)
lambdatracker[t]<-N
n0 <-n0/N
}
return(list(lambdatracker=lambdatracker,SRtracker=SRtracker,OSRtracker=OSRtracker,n0=n0))
}
lambdatracker
