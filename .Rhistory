## M-to-M (growth/survival transition)
M.Tmat<-matrix(0,matdim+1,matdim+1)
M.Tmat[2:(matdim+1),2:(matdim+1)]<-t(outer(y,y,pxy,params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb,surv_perturb=surv_perturb))
M.Tmat[2:(matdim+1),1] <- gxy(x=1,y=y,params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb) * (M_params$sdlg_surv + surv_perturb)
# F-to-M Fertility transition
M.Fmat<-matrix(0,matdim+1,matdim+1)
M.Fmat[1,2:(matdim+1)]<-fertx_M(x=y,params=F_params,rfx=rfx,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=twosex,OSR=OSR,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb)
#M-to-F
zero.mat<-matrix(0,matdim+1,matdim+1)
# Put it all together as a megamatrix
MEGAmat<-cbind(rbind(F.Tmat+F.Fmat,  ##Female growth/survival + recruitment[1,1]
M.Fmat), ##Male recruitment [2,1]
rbind(zero.mat,   ##Females from males [1,2]
M.Tmat))   ##Male growth/survival
return(list(MEGAmat=MEGAmat,F.Tmat=F.Tmat,M.Tmat=M.Tmat,y=y))
}
megamatrix_delay<-function(F_params,M_params,pptgrow,pptdorm,tempgrow,tempdorm,twosex,OSR=NULL,
grow_perturb=0,surv_perturb=0,flow_perturb=0,fert_perturb=0,viab_perturb=0){
matdim<-F_params$max_size
y<-1:F_params$max_size
## F-to-F (growth/survival transition)
F.Tmat<-matrix(0,matdim+1,matdim+1)
F.Tmat[2:(matdim+1),2:(matdim+1)]<-t(outer(y,y,pxy,params=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb,surv_perturb=surv_perturb))
# surviving seedlings emerge in continuous population
F.Tmat[2:(matdim+1),1] <- gxy(x=1,y=y,params=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb) * (M_params$sdlg_surv + surv_perturb)
# F-to-F Fertility transition
F.Fmat<-matrix(0,matdim+1,matdim+1)
# seedlings in top row
F.Fmat[1,2:(matdim+1)]<-fertx_F(x=y,params=F_params,rfx=rfx,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=twosex,OSR=OSR,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb)
## M-to-M (growth/survival transition)
M.Tmat<-matrix(0,matdim+1,matdim+1)
M.Tmat[2:(matdim+1),2:(matdim+1)]<-t(outer(y,y,pxy,params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb,surv_perturb=surv_perturb))
M.Tmat[2:(matdim+1),1] <- gxy(x=1,y=y,params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb) * (M_params$sdlg_surv + surv_perturb)
# F-to-M Fertility transition
M.Fmat<-matrix(0,matdim+1,matdim+1)
M.Fmat[1,2:(matdim+1)]<-fertx_M(x=y,params=F_params,rfx=rfx,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=twosex,OSR=OSR,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb)
#M-to-F
zero.mat<-matrix(0,matdim+1,matdim+1)
# Put it all together as a megamatrix
MEGAmat<-cbind(rbind(F.Tmat+F.Fmat,  ##Female growth/survival + recruitment[1,1]
M.Fmat), ##Male recruitment [2,1]
rbind(zero.mat,   ##Females from males [1,2]
M.Tmat))   ##Male growth/survival
return(list(MEGAmat=MEGAmat,F.Tmat=F.Tmat,M.Tmat=M.Tmat,y=y))
}
F_params=F_params
M_params=M_params
pptgrow
pptgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptgrow))
pptdorm=mean(na.omit(poarclim_seasonal.sur_mean_sd$pptdorm))
tempgrow=mean(na.omit(poarclim_seasonal.sur_mean_sd$tempgrow))
tempdorm=mean(poarclim_seasonal.sur_mean_sd$tempdorm)
flow_perturb=0
fert_perturb=0
viab_perturb=0
megamatrix_delay<-function(F_params,M_params,pptgrow,pptdorm,tempgrow,tempdorm,twosex,OSR=NULL,rfx,
grow_perturb=0,surv_perturb=0,flow_perturb=0,fert_perturb=0,viab_perturb=0){
matdim<-F_params$max_size
y<-1:F_params$max_size
## F-to-F (growth/survival transition)
F.Tmat<-matrix(0,matdim+1,matdim+1)
F.Tmat[2:(matdim+1),2:(matdim+1)]<-t(outer(y,y,pxy,params=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb,surv_perturb=surv_perturb))
# surviving seedlings emerge in continuous population
F.Tmat[2:(matdim+1),1] <- gxy(x=1,y=y,params=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb) * (M_params$sdlg_surv + surv_perturb)
# F-to-F Fertility transition
F.Fmat<-matrix(0,matdim+1,matdim+1)
# seedlings in top row
F.Fmat[1,2:(matdim+1)]<-fertx_F(x=y,params=F_params,rfx=rfx,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=twosex,OSR=OSR,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb)
## M-to-M (growth/survival transition)
M.Tmat<-matrix(0,matdim+1,matdim+1)
M.Tmat[2:(matdim+1),2:(matdim+1)]<-t(outer(y,y,pxy,params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb,surv_perturb=surv_perturb))
M.Tmat[2:(matdim+1),1] <- gxy(x=1,y=y,params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb) * (M_params$sdlg_surv + surv_perturb)
# F-to-M Fertility transition
M.Fmat<-matrix(0,matdim+1,matdim+1)
M.Fmat[1,2:(matdim+1)]<-fertx_M(x=y,params=F_params,rfx=rfx,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=twosex,OSR=OSR,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb)
#M-to-F
zero.mat<-matrix(0,matdim+1,matdim+1)
# Put it all together as a megamatrix
MEGAmat<-cbind(rbind(F.Tmat+F.Fmat,  ##Female growth/survival + recruitment[1,1]
M.Fmat), ##Male recruitment [2,1]
rbind(zero.mat,   ##Females from males [1,2]
M.Tmat))   ##Male growth/survival
return(list(MEGAmat=MEGAmat,F.Tmat=F.Tmat,M.Tmat=M.Tmat,y=y))
}
matdim<-F_params$max_size
y<-1:F_params$max_size
matdim
F_params$max_size
## set max size equal between the sexes
F_params$max_size <- M_params$max_size <- round(quantile(na.omit(scale(poar.clim_seasonal$tillerN_t1)),probs=0.99))
na.omit(scale(poar.clim_seasonal$tillerN_t1
)
))
## set max size equal between the sexes
F_params$max_size <- M_params$max_size <- round(quantile(na.omit((poar.clim_seasonal$tillerN_t1)),probs=0.99))
F_params$max_size
matdim<-F_params$max_size
y<-1:F_params$max_size
y
## F-to-F (growth/survival transition)
F.Tmat<-matrix(0,matdim+1,matdim+1)
F.Tmat[2:(matdim+1),2:(matdim+1)]<-t(outer(y,y,pxy,params=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb,surv_perturb=surv_perturb))
pxy
#SURVIVAL*GROWTH
pxy<-function(x,y,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,surv_perturb=0,grow_perturb=0){
sx(x,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,surv_perturb) * gxy(x,y,params,pptgrow,pptdorm,tempgrow,tempdorm,rfx,grow_perturb)
}
## F-to-F (growth/survival transition)
F.Tmat<-matrix(0,matdim+1,matdim+1)
F.Tmat[2:(matdim+1),2:(matdim+1)]<-t(outer(y,y,pxy,params=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb,surv_perturb=surv_perturb))
# surviving seedlings emerge in continuous population
F.Tmat[2:(matdim+1),1] <- gxy(x=1,y=y,params=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,grow_perturb=grow_perturb) * (M_params$sdlg_surv + surv_perturb)
# F-to-F Fertility transition
F.Fmat<-matrix(0,matdim+1,matdim+1)
# seedlings in top row
F.Fmat[1,2:(matdim+1)]<-fertx_F(x=y,params=F_params,rfx=rfx,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=twosex,OSR=OSR,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb)
fertx_F
rm(list = ls())
rm(list = ls())
# load packages
library(rstan)
# set rstan options
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(13)
# Sys.setenv(LOCAL_CPPFLAGS = '-march=corei7 -mtune=corei7')
options(tidyverse.quiet = TRUE)
library(tidyverse)
options(dplyr.summarise.inform = FALSE)
library(bayesplot)
# install.packages("countreg",repos = "http://R-Forge.R-project.org")
library(countreg)
library(rmutil)
library(actuar)
library(SPEI)
library(LaplacesDemon)
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("scater")
# library(scater)
poar_allsites <- read.csv("https://www.dropbox.com/s/xk4225mn8btqhbm/demography_allsites.csv?dl=1", stringsAsFactors = F)#common garden data
poar_allsites$census.year<-poar_allsites$year-1 #Add census year to match with climate data
poar_allsites %>%
dplyr::select(everything()) %>%
filter(census.year %in% (2015:2016))-> poar_allsites_2015_2016 # Drop the first census to match with the seasonal model (growing and dormant season temp and precip)
poar_ppt <- read.csv("https://www.dropbox.com/s/kkga2hf9k1w9ht1/Poa_pr.csv?dl=1", stringsAsFactors = F) # monthly  precipitation
poar_temp <- read.csv("https://www.dropbox.com/s/n0vrn8q5ma49rc9/Poa_tas.csv?dl=1", stringsAsFactors = F) # monthly temperature)
poar_ppt$census.year<-ifelse(poar_ppt$month<5,poar_ppt$year-1,poar_ppt$year) # data were collected in May. Thus, the precipitation for the census year is both the precipitation from May to December of the previous year and precipitation of the current year.
poar_temp$census.year<-ifelse(poar_temp$month<5,poar_temp$year-1,poar_temp$year)
poar_temp %>%
dplyr::select(site,Longitude, Latitude,census.year,temp,month) %>%
dplyr::filter(census.year %in% (2015:2016)) %>%
dplyr::mutate(Season=ifelse((month >= 6) & (month <= 9), "dormant", "growing")) %>%
group_by(site,Season) %>%
dplyr::summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),temp_season = mean(temp))->poar_tempseason
poar_ppt %>%
dplyr::select(site,Longitude, Latitude,census.year,ppt,month) %>%
dplyr::filter(census.year %in% (2015:2016)) %>%
dplyr::mutate(Season=ifelse((month >= 6) & (month <= 9), "dormant", "growing")) %>%
group_by(site,Season) %>%
dplyr::summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),ppt_season = sum(ppt))->poar_pptseason
poar_climseason<- merge(x = poar_tempseason, y = poar_pptseason) # merge temperature and precipitation data
poar_allsites.clim_season <- left_join(x = poar_allsites_2015_2016 ,y =poar_climseason,by=c("site","Longitude","Latitude")) # merge the demographic data with climatic data for each site
poar_allsites.clim_season %>%
filter(Season=="growing") %>%
mutate(tempgrow=temp_season,pptgrow=ppt_season)->poar_allsites.clim_season_grow
# head(poar_allsites.clim_season_grow)
# head(poar_allsites.clim_season_dorm)
poar_allsites.clim_season %>%
filter(Season=="dormant") %>%
mutate(tempdorm=temp_season,pptdorm=ppt_season)->poar_allsites.clim_season_dorm
poar.clim_seasonal<- cbind(poar_allsites.clim_season_grow,tempdorm=poar_allsites.clim_season_dorm$tempdorm,pptdorm=poar_allsites.clim_season_dorm$pptdorm)
poar.clim_seasonal %>%
mutate( pptgrow   = pptgrow %>% scale %>% .[,1],
tempgrow = tempgrow %>% scale %>% .[,1],
pptdorm = pptdorm %>% scale %>% .[,1],
tempdorm= tempdorm %>% scale %>% .[,1])->zpoar.clim_seasonal
#load stan output -- this will also take a while, but not as long as running the model from scratch
fit_survival <- readRDS(url("https://www.dropbox.com/s/xr3zrapbwimsfa5/poar_survival_seasonpolynomial.rds?dl=1"))
fit_growth<-readRDS(url("https://www.dropbox.com/s/onie8qtrzer8cme/poar_growth_seasonpolynomial.rds?dl=1"))
fit_flow<-readRDS(url("https://www.dropbox.com/s/o5r2hijb256fmb7/poar_flow_seasonpolynomial.rds?dl=1"))
fit_panicle<-readRDS(url("https://www.dropbox.com/s/ydtzwurgf7s58lt/poar_panicle_seasonpolynomial.rds?dl=1"))
fit_viability<-readRDS(url("https://www.dropbox.com/scl/fi/ig1c0vf2sxq2qmsncs9sm/Vaibility.rds?rlkey=73cvtqef95kmyq1637s1f2s0d&dl=1"))
# source("/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/twosexMPM.R")
source("/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/twosexMPMLTRE.R")
POAU <- read.csv("https://www.dropbox.com/s/7f2yfz49fzrcp5i/POAU.csv?dl=1")
sdlg_surv <- POAU %>% filter(year_recruit==year_t,year_t %in% 2014:2016) %>% summarise(sdlg_surv = mean(spring_survival_t1,na.rm=T))
mean_coefs<- lapply(rstan::extract(fit_survival, pars = c("b0_s","bsizesex_s","btempdormpptdorm_s","btempgrowpptgrow_s","bsex_s", "bsize_s","bpptgrow_s","bpptdorm_s","btempgrow_s","btempdorm_s","bpptgrowsex_s","bpptdormsex_s","btempgrowsex_s","btempdormsex_s","btempdormpptdormsex_s","btempgrowpptgrowsex_s","bpptgrow2_s","bpptdorm2_s","btempgrow2_s","btempdorm2_s","bpptgrow2sex_s","bpptdorm2sex_s","btempgrow2sex_s","btempdorm2sex_s")) ,mean)
mean_coefg<- lapply(rstan::extract(fit_growth, pars = c("b0_g","btempdormpptdorm_g","btempgrowpptgrow_g","bsizesex_g","bsex_g", "bsize_g","bpptgrow_g","bpptdorm_g","btempgrow_g","btempdorm_g","bpptgrowsex_g","bpptdormsex_g","btempgrowsex_g","btempdormsex_g","btempdormpptdormsex_g","btempgrowpptgrowsex_g","bpptgrow2_g","bpptdorm2_g","btempgrow2_g","btempdorm2_g","bpptgrow2sex_g","bpptdorm2sex_g","btempgrow2sex_g","btempdorm2sex_g","sigma")) ,mean)
mean_coeff<- lapply(rstan::extract(fit_flow, pars = c("b0_f","bsizesex_f","bsex_f", "bsize_f","bpptgrow_f","bpptdorm_f","btempgrow_f","btempdorm_f","bpptgrowsex_f","bpptdormsex_f","btempgrowsex_f","btempdormsex_f","btempdormpptdorm_f","btempgrowpptgrow_f","btempdormpptdormsex_f","btempgrowpptgrowsex_f","bpptgrow2_f","bpptdorm2_f","btempgrow2_f","btempdorm2_f","bpptgrow2sex_f","bpptdorm2sex_f","btempgrow2sex_f","btempdorm2sex_f")) ,mean)
mean_coefp<- lapply(rstan::extract(fit_panicle, pars = c("b0_p","bsex_p","bsex_p","bsizesex_p", "bsize_p","bpptgrow_p","bpptdorm_p","btempgrow_p","btempdorm_p","bpptgrowsex_p","bpptdormsex_p","btempgrowsex_p","btempdormsex_p","btempdormpptdorm_p","btempgrowpptgrow_p","btempdormpptdormsex_p","btempgrowpptgrowsex_p","bpptgrow2_p","bpptdorm2_p","btempgrow2_p","btempdorm2_p","bpptgrow2sex_p","bpptdorm2sex_p","btempgrow2sex_p","btempdorm2sex_p")) ,mean)
mean_coefv<-lapply(rstan::extract(fit_viability, pars = c("v0","a_v","m","lambda_d")) ,mean)
F_params <- M_params <- c()
## survival
F_params$surv_mu <- mean_coefs$b0_s
F_params$surv_size <- mean_coefs$bsize_s
F_params$surv_pptgrow <- mean_coefs$bpptgrow_s
F_params$surv_pptdorm <- mean_coefs$bpptdorm_s
F_params$surv_tempgrow <- mean_coefs$btempgrow_s
F_params$surv_tempdorm <- mean_coefs$btempdorm_s
F_params$surv_tempdorm_pptdorm<-mean_coefs$btempdormpptdorm_s
F_params$surv_tempgrow_pptgrow<-mean_coefs$btempgrowpptgrow_s
F_params$surv_pptgrow2<-mean_coefs$bpptgrow2_s
F_params$surv_pptdorm2<-mean_coefs$bpptdorm2_s
F_params$surv_tempgrow2<-mean_coefs$btempgrow2_s
F_params$surv_tempdorm2<-mean_coefs$btempdorm2_s
M_params$surv_mu <- mean_coefs$b0_s + mean_coefs$bsex_s
M_params$surv_size <- mean_coefs$bsize_s + mean_coefs$bsizesex_s
M_params$surv_pptgrow <- mean_coefs$bpptgrow_s  + mean_coefs$bpptgrowsex_s
M_params$surv_pptdorm <- mean_coefs$bpptdorm_s  + mean_coefs$bpptdormsex_s
M_params$surv_tempgrow <- mean_coefs$btempgrow_s + mean_coefs$btempgrowsex_s #
M_params$surv_tempdorm <-  mean_coefs$btempdorm_s  + mean_coefs$btempdormsex_s
M_params$surv_tempdorm_pptdorm<-mean_coefs$btempdormpptdorm_s + mean_coefs$btempdormpptdormsex_s
M_params$surv_tempgrow_pptgrow<-mean_coefs$btempgrowpptgrow_s + mean_coefs$btempgrowpptgrowsex_s
M_params$surv_pptgrow2<-mean_coefs$bpptgrow2_s + mean_coefs$bpptgrow2sex_s
M_params$surv_pptdorm2<-mean_coefs$bpptdorm2_s + mean_coefs$bpptdorm2sex_s
M_params$surv_tempgrow2<-mean_coefs$btempgrow2_s + mean_coefs$btempgrow2sex_s
M_params$surv_tempdorm2<-mean_coefs$btempdorm2_s + mean_coefs$btempdorm2sex_s
## growth
F_params$grow_mu <- mean_coefg$b0_g
F_params$grow_size <- mean_coefg$bsize_g
F_params$grow_pptgrow <- mean_coefg$bpptgrow_g
F_params$grow_pptdorm <- mean_coefg$bpptdorm_g
F_params$grow_tempgrow <- mean_coefg$btempgrow_g
F_params$grow_tempdorm <- mean_coefg$btempdorm_g
F_params$grow_tempdorm_pptdorm<-mean_coefg$btempdormpptdorm_g
F_params$grow_tempgrow_pptgrow<-mean_coefg$btempgrowpptgrow_g
F_params$grow_pptgrow2<-mean_coefg$bpptgrow2_g
F_params$grow_pptdorm2<-mean_coefg$bpptdorm2_g
F_params$grow_tempgrow2<-mean_coefg$btempgrow2_g
F_params$grow_tempdorm2<-mean_coefg$btempdorm2_g
F_params$sigma_g <- mean_coefg$sigma
M_params$grow_mu <- mean_coefg$b0_g + mean_coefg$bsex_g
M_params$grow_size <- mean_coefg$bsize_g + mean_coefg$bsizesex_g
M_params$grow_pptgrow <- mean_coefg$bpptgrow_g  + mean_coefg$bpptgrowsex_g
M_params$grow_pptdorm <- mean_coefg$bpptdorm_g  + mean_coefg$bpptdormsex_g
M_params$grow_tempgrow <- mean_coefg$btempgrow_g + mean_coefg$btempgrowsex_g #
M_params$grow_tempdorm <-  mean_coefg$btempdorm_g  + mean_coefg$btempdormsex_g
M_params$grow_tempdorm_pptdorm<-mean_coefg$btempdormpptdorm_g + mean_coefg$btempdormpptdormsex_g
M_params$grow_tempgrow_pptgrow<-mean_coefg$btempgrowpptgrow_g + mean_coefg$btempgrowpptgrowsex_g
M_params$grow_pptgrow2<-mean_coefg$bpptgrow2_g + mean_coefg$bpptgrow2sex_g
M_params$grow_pptdorm2<-mean_coefg$bpptdorm2_g + mean_coefg$bpptdorm2sex_g
M_params$grow_tempgrow2<-mean_coefg$btempgrow2_g + mean_coefg$btempgrow2sex_g
M_params$grow_tempdorm2<-mean_coefg$btempdorm2_g + mean_coefg$btempdorm2sex_g
M_params$sigma_g <- mean_coefg$sigma
## flowering
F_params$flow_mu <- mean_coeff$b0_f
F_params$flow_size <- mean_coeff$bsize_f
F_params$flow_pptgrow <- mean_coeff$bpptgrow_f
F_params$flow_pptdorm <- mean_coeff$bpptdorm_f
F_params$flow_tempgrow <- mean_coeff$btempgrow_f
F_params$flow_tempdorm <- mean_coeff$btempdorm_f
F_params$flow_tempdorm_pptdorm<-mean_coeff$btempdormpptdorm_f
F_params$flow_tempgrow_pptgrow<-mean_coeff$btempgrowpptgrow_f
F_params$flow_pptgrow2<-mean_coeff$bpptgrow2_f
F_params$flow_pptdorm2<-mean_coeff$bpptdorm2_f
F_params$flow_tempgrow2<-mean_coeff$btempgrow2_f
F_params$flow_tempdorm2<-mean_coeff$btempdorm2_f
M_params$flow_mu <- mean_coeff$b0_f + mean_coeff$bsex_f
M_params$flow_size <- mean_coeff$bsize_f + mean_coeff$bsizesex_f
M_params$flow_pptgrow <- mean_coeff$bpptgrow_f  + mean_coeff$bpptgrowsex_f
M_params$flow_pptdorm <- mean_coeff$bpptdorm_f  + mean_coeff$bpptdormsex_f
M_params$flow_tempgrow <- mean_coeff$btempgrow_f + mean_coeff$btempgrowsex_f #
M_params$flow_tempdorm <-  mean_coeff$btempdorm_f  + mean_coeff$btempdormsex_f
M_params$flow_tempdorm_pptdorm<-mean_coeff$btempdormpptdorm_f + mean_coeff$btempdormpptdormsex_f
M_params$flow_tempgrow_pptgrow<-mean_coeff$btempgrowpptgrow_f + mean_coeff$btempgrowpptgrowsex_f
M_params$flow_pptgrow2<-mean_coeff$bpptgrow2_f + mean_coeff$bpptgrow2sex_f
M_params$flow_pptdorm2<-mean_coeff$bpptdorm2_f + mean_coeff$bpptdorm2sex_f
M_params$flow_tempgrow2<-mean_coeff$btempgrow2_f + mean_coeff$btempgrow2sex_f
M_params$flow_tempdorm2<-mean_coeff$btempdorm2_f + mean_coeff$btempdorm2sex_f
## panicles
F_params$panic_mu <- mean_coefp$b0_p
F_params$panic_size <- mean_coefp$bsize_p
F_params$panic_pptgrow <- mean_coefp$bpptgrow_p
F_params$panic_pptdorm <- mean_coefp$bpptdorm_p
F_params$panic_tempgrow <- mean_coefp$btempgrow_p
F_params$panic_tempdorm <- mean_coefp$btempdorm_p
F_params$panic_tempdorm_pptdorm<-mean_coefp$btempdormpptdorm_p
F_params$panic_tempgrow_pptgrow<-mean_coefp$btempgrowpptgrow_p
F_params$panic_pptgrow2<-mean_coefp$bpptgrow2_p
F_params$panic_pptdorm2<-mean_coefp$bpptdorm2_p
F_params$panic_tempgrow2<-mean_coefp$btempgrow2_p
F_params$panic_tempdorm2<-mean_coefp$btempdorm2_p
M_params$panic_mu <- mean_coefp$b0_p + mean_coefp$bsex_p
M_params$panic_size <- mean_coefp$bsize_p + mean_coefp$bsizesex_p
M_params$panic_pptgrow <- mean_coefp$bpptgrow_p  + mean_coefp$bpptgrowsex_p
M_params$panic_pptdorm <- mean_coefp$bpptdorm_p  + mean_coefp$bpptdormsex_p
M_params$panic_tempgrow <- mean_coefp$btempgrow_p + mean_coefp$btempgrowsex_p #
M_params$panic_tempdorm <-  mean_coefp$btempdorm_p  + mean_coefp$btempdormsex_p
M_params$panic_tempdorm_pptdorm<-mean_coefp$btempdormpptdorm_p + mean_coefp$btempdormpptdormsex_p
M_params$panic_tempgrow_pptgrow<-mean_coefp$btempgrowpptgrow_p + mean_coefp$btempgrowpptgrowsex_p
M_params$panic_pptgrow2<-mean_coefp$bpptgrow2_p + mean_coefp$bpptgrow2sex_p
M_params$panic_pptdorm2<-mean_coefp$bpptdorm2_p + mean_coefp$bpptdorm2sex_p
M_params$panic_tempgrow2<-mean_coefp$btempgrow2_p + mean_coefp$btempgrow2sex_p
M_params$panic_tempdorm2<-mean_coefp$btempdorm2_p + mean_coefp$btempdorm2sex_p
## seed viability and misc fertility params
F_params$v0 <- mean_coefv$v0
F_params$a_v <- mean_coefv$a_v
F_params$ov_per_inf <- mean_coefv$lambda_d
F_params$germ <- mean_coefv$m
F_params$PSR <- 0.5
## use POAU seedling survival for females and males
F_params$sdlg_surv <- M_params$sdlg_surv <- sdlg_surv$sdlg_surv
## set max size equal between the sexes
F_params$max_size <- M_params$max_size <- round(quantile(na.omit((poar.clim_seasonal$tillerN_t1)),probs=0.99))
F_params
pptgrow_seq <- seq(min(poar.clim_seasonal$pptgrow),max(poar.clim_seasonal$pptgrow),length.out=30)
tempgrow_seq <- seq(min(poar.clim_seasonal$tempgrow),max(poar.clim_seasonal$tempgrow),length.out=30)
pptdorm_seq <- seq(min(poar.clim_seasonal$pptdorm),max(poar.clim_seasonal$pptdorm),length.out=30)
tempdorm_seq <- seq(min(poar.clim_seasonal$tempdorm),max(poar.clim_seasonal$tempdorm),length.out=30)
grow_perturb=0
surv_perturb=0
flow_perturb=0
fert_perturb=0
viab_perturb=0
lambda_pptgrow_mean<-lambda_pptgrow_mean_2sex<-SR_pptgrow_mean<-OSR_pptgrow_mean<-c()
ssd<-matrix(NA,(F_params$max_size+1)*2,length(pptgrow_seq))
max_yrs <- 30
for(l in 1:length(pptgrow_seq)){
print(l/length(pptgrow_seq))
#linear model for comparison
mat <- megamatrix_delay( F_params=F_params,
M_params=M_params,
twosex=F,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=pptgrow_seq[l],
tempgrow=tempgrow_seq[l],
pptdorm=pptdorm_seq[l],
tempdorm=tempdorm_seq[l],
rfx=rfx_fun())$MEGAmat
lambda_pptgrow_mean[l] <- lambda(mat)
#2-sex model
lambda_run <- lambdaSim_delay( F_params=F_params,
M_params=M_params,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow = pptgrow_seq[l],
tempgrow=tempgrow_seq[l],
pptdorm=pptdorm_seq[l],
tempdorm=tempdorm_seq[l],
rfx = rfx_fun(),
max.yrs = max_yrs)
lambda_pptgrow_mean_2sex[l] <- lambda_run$lambdatracker[max_yrs]
SR_pptgrow_mean[l] <- lambda_run$SRtracker[max_yrs]
OSR_pptgrow_mean[l] <- lambda_run$OSRtracker[max_yrs]
ssd[,l] <- lambda_run$n0
}
for(l in 1:length(pptgrow_seq)){
print(l/length(pptgrow_seq))
#linear model for comparison
#2-sex model
lambda_run <- lambdaSim_delay( F_params=F_params,
M_params=M_params,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow = pptgrow_seq[l],
tempgrow=tempgrow_seq[l],
pptdorm=pptdorm_seq[l],
tempdorm=tempdorm_seq[l],
rfx = rfx_fun(),
max.yrs = max_yrs)
lambda_pptgrow_mean_2sex[l] <- lambda_run$lambdatracker[max_yrs]
SR_pptgrow_mean[l] <- lambda_run$SRtracker[max_yrs]
OSR_pptgrow_mean[l] <- lambda_run$OSRtracker[max_yrs]
ssd[,l] <- lambda_run$n0
}
for(l in 1:length(long_seq_extend)){
print(l/length(long_seq_extend))
#linear model for comparison
mat <- megamatrix_delay( F_params,
M_params,
twosex=F,
long=long_seq_extend[l],
rfx=rfx_fun())$MEGAmat
# lambda_long_mean[l] <- lambda(mat)
#2-sex model
# lambda_run <- lambdaSim_delay( F_params=F_params,
#                                M_params=M_params,
#                                long = long_seq_extend[l],
#                                rfx = rfx_fun(),
#                                max.yrs = max_yrs)
# lambda_long_mean_2sex[l] <- lambda_run$lambdatracker[max_yrs]
# SR_long_mean[l] <- lambda_run$SRtracker[max_yrs]
# OSR_long_mean[l] <- lambda_run$OSRtracker[max_yrs]
# ssd[,l] <- lambda_run$n0
}
for(l in 1:length(pptgrow_seq)){
print(l/length(pptgrow_seq))
#linear model for comparison
mat <- megamatrix_delay( F_params=F_params,
M_params=M_params,
twosex=F,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=pptgrow_seq[l],
tempgrow=tempgrow_seq[l],
pptdorm=pptdorm_seq[l],
tempdorm=tempdorm_seq[l],
rfx=rfx_fun())$MEGAmat
# lambda_pptgrow_mean[l] <- lambda(mat)
#2-sex model
# lambda_run <- lambdaSim_delay( F_params=F_params,
#                                M_params=M_params,
#                                grow_perturb=0,
#                                surv_perturb=0,
#                                flow_perturb=0,
#                                fert_perturb=0,
#                                viab_perturb=0,
#                                pptgrow = pptgrow_seq[l],
#                                tempgrow=tempgrow_seq[l],
#                                pptdorm=pptdorm_seq[l],
#                                tempdorm=tempdorm_seq[l],
#                                rfx = rfx_fun(),
#                                max.yrs = max_yrs)
# lambda_pptgrow_mean_2sex[l] <- lambda_run$lambdatracker[max_yrs]
# SR_pptgrow_mean[l] <- lambda_run$SRtracker[max_yrs]
# OSR_pptgrow_mean[l] <- lambda_run$OSRtracker[max_yrs]
# ssd[,l] <- lambda_run$n0
}
mat
install.packages("popbio")
for(l in 1:length(pptgrow_seq)){
print(l/length(pptgrow_seq))
#linear model for comparison
mat <- megamatrix_delay( F_params=F_params,
M_params=M_params,
twosex=F,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=pptgrow_seq[l],
tempgrow=tempgrow_seq[l],
pptdorm=pptdorm_seq[l],
tempdorm=tempdorm_seq[l],
rfx=rfx_fun())$MEGAmat
lambda_pptgrow_mean[l] <- popbio::lambda(mat)
#2-sex model
lambda_run <- lambdaSim_delay( F_params=F_params,
M_params=M_params,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow = pptgrow_seq[l],
tempgrow=tempgrow_seq[l],
pptdorm=pptdorm_seq[l],
tempdorm=tempdorm_seq[l],
rfx = rfx_fun(),
max.yrs = max_yrs)
lambda_pptgrow_mean_2sex[l] <- lambda_run$lambdatracker[max_yrs]
SR_pptgrow_mean[l] <- lambda_run$SRtracker[max_yrs]
OSR_pptgrow_mean[l] <- lambda_run$OSRtracker[max_yrs]
ssd[,l] <- lambda_run$n0
}
pptgrow_seq
tempgrow_seq
pptdorm_seq
tempdorm_seq
for(l in 1:length(pptgrow_seq)){
print(l/length(pptgrow_seq))
#linear model for comparison
mat <- megamatrix_delay( F_params=F_params,
M_params=M_params,
twosex=F,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=pptgrow_seq[l],
tempgrow=tempgrow_seq[l],
pptdorm=pptdorm_seq[l],
tempdorm=tempdorm_seq[l],
rfx=rfx_fun())$MEGAmat
lambda_pptgrow_mean[l] <- popbio::lambda(mat)
#2-sex model
lambda_run <- lambdaSim_delay( F_params=F_params,
M_params=M_params,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow = pptgrow_seq[l],
tempgrow=tempgrow_seq[l],
pptdorm=pptdorm_seq[l],
tempdorm=tempdorm_seq[l],
rfx = rfx_fun(),
max.yrs = max_yrs)
lambda_pptgrow_mean_2sex[l] <- lambda_run$lambdatracker[max_yrs]
SR_pptgrow_mean[l] <- lambda_run$SRtracker[max_yrs]
OSR_pptgrow_mean[l] <- lambda_run$OSRtracker[max_yrs]
ssd[,l] <- lambda_run$n0
}
lambda_pptgrow_mean_2sex
lambda_pptgrow_mean
