surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=mean(climat_dorm$pptgrow_seq_extend),
tempgrow=mean(climat_dorm$tempgrow_seq_extend),
pptdorm=dorm[i,1],
tempdorm=dorm[i,2],
rfx=rfx_fun())$MEGAmat
lambda_dorm_mean[i] <- popbio::lambda(mat)
#2-sex model
lambda_run <- lambdaSim_delay( F_params=F_params,
M_params=M_params,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=mean(climat_dorm$pptgrow_seq_extend),
tempgrow=mean(climat_dorm$tempgrow_seq_extend),
pptdorm=dorm[i,1],
tempdorm=dorm[i,2],
rfx = rfx_fun(),
max.yrs = max_yrs)
lambda_dorm_mean_2sex[i] <- lambda_run$lambdatracker[max_yrs]
SR_dorm_mean[i] <- lambda_run$SRtracker[max_yrs]
OSR_dorm_mean[i] <- lambda_run$OSRtracker[max_yrs]
ssd[,i] <- lambda_run$n0
}
for (i in 1:nrow(climat_dorm)) {
#linear model for comparison
mat <- megamatrix_delay( F_params=F_params,
M_params=M_params,
twosex=F,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=mean(climat_dorm$pptgrow_seq_extend),
tempgrow=mean(climat_dorm$tempgrow_seq_extend),
pptdorm=climat_dorm[i,1],
tempdorm=climat_dorm[i,2],
rfx=rfx_fun())$MEGAmat
lambda_dorm_mean[i] <- popbio::lambda(mat)
#2-sex model
lambda_run <- lambdaSim_delay( F_params=F_params,
M_params=M_params,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=mean(climat_dorm$pptgrow_seq_extend),
tempgrow=mean(climat_dorm$tempgrow_seq_extend),
pptdorm=climat_dorm[i,1],
tempdorm=climat_dorm[i,2],
rfx = rfx_fun(),
max.yrs = max_yrs)
lambda_dorm_mean_2sex[i] <- lambda_run$lambdatracker[max_yrs]
SR_dorm_mean[i] <- lambda_run$SRtracker[max_yrs]
OSR_dorm_mean[i] <- lambda_run$OSRtracker[max_yrs]
ssd[,i] <- lambda_run$n0
}
climat_dorm
lambda_dorm_mean<-lambda_dorm_mean_2sex<-SR_dorm_mean<-OSR_dorm_mean<-c()
dorm<-matrix(c(pptdorm_seq_extend,tempdorm_seq_extend),ncol=2)
ssd<-matrix(NA,(F_params$max_size+1)*2,length(pptdorm_seq_extend))
max_yrs <- 10
for (i in 1:nrow(climat_dorm)) {
#linear model for comparison
mat <- megamatrix_delay( F_params=F_params,
M_params=M_params,
twosex=F,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=mean(climat_dorm$pptgrow_seq_extend),
tempgrow=mean(climat_dorm$tempgrow_seq_extend),
pptdorm=climat_dorm[i,1],
tempdorm=climat_dorm[i,2],
rfx=rfx_fun())$MEGAmat
lambda_dorm_mean[i] <- popbio::lambda(mat)
#2-sex model
lambda_run <- lambdaSim_delay( F_params=F_params,
M_params=M_params,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=mean(climat_dorm$pptgrow_seq_extend),
tempgrow=mean(climat_dorm$tempgrow_seq_extend),
pptdorm=climat_dorm[i,1],
tempdorm=climat_dorm[i,2],
rfx = rfx_fun(),
max.yrs = max_yrs)
lambda_dorm_mean_2sex[i] <- lambda_run$lambdatracker[max_yrs]
SR_dorm_mean[i] <- lambda_run$SRtracker[max_yrs]
OSR_dorm_mean[i] <- lambda_run$OSRtracker[max_yrs]
# ssd[,i] <- lambda_run$n0
}
rm(list = ls())
# load packages
library(rstan)
# set rstan options
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
set.seed(13)
# Sys.setenv(LOCAL_CPPFLAGS = '-march=corei7 -mtune=corei7')
options(tidyverse.quiet = TRUE)
library(tidyverse)
options(dplyr.summarise.inform = FALSE)
library(bayesplot)
# install.packages("countreg",repos = "http://R-Forge.R-project.org")
library(countreg)
library(rmutil)
library(actuar)
library(SPEI)
library(LaplacesDemon)
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("scater")
# library(scater)
poar_allsites <- read.csv("https://www.dropbox.com/s/xk4225mn8btqhbm/demography_allsites.csv?dl=1", stringsAsFactors = F)#common garden data
poar_allsites$census.year<-poar_allsites$year-1 #Add census year to match with climate data
poar_allsites %>%
dplyr::select(everything()) %>%
filter(census.year %in% (2015:2016))-> poar_allsites_2015_2016 # Drop the first census to match with the seasonal model (growing and dormant season temp and precip)
poar_ppt <- read.csv("https://www.dropbox.com/s/kkga2hf9k1w9ht1/Poa_pr.csv?dl=1", stringsAsFactors = F) # monthly  precipitation
poar_temp <- read.csv("https://www.dropbox.com/s/n0vrn8q5ma49rc9/Poa_tas.csv?dl=1", stringsAsFactors = F) # monthly temperature)
poar_ppt$census.year<-ifelse(poar_ppt$month<5,poar_ppt$year-1,poar_ppt$year) # data were collected in May. Thus, the precipitation for the census year is both the precipitation from May to December of the previous year and precipitation of the current year.
poar_temp$census.year<-ifelse(poar_temp$month<5,poar_temp$year-1,poar_temp$year)
poar_temp %>%
dplyr::select(site,Longitude, Latitude,census.year,temp,month) %>%
dplyr::filter(census.year %in% (2015:2016)) %>%
dplyr::mutate(Season=ifelse((month >= 6) & (month <= 9), "dormant", "growing")) %>%
group_by(site,census.year,Season) %>%
dplyr::summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),temp_season = mean(temp))->poar_tempseason
poar_ppt %>%
dplyr::select(site,Longitude, Latitude,census.year,ppt,month) %>%
dplyr::filter(census.year %in% (2015:2016)) %>%
dplyr::mutate(Season=ifelse((month >= 6) & (month <= 9), "dormant", "growing")) %>%
group_by(site,census.year,Season) %>%
dplyr::summarise(site=unique(site),Longitude=unique(Longitude),Latitude=unique(Latitude),ppt_season = sum(ppt))->poar_pptseason
poar_climseason<- merge(x = poar_tempseason, y = poar_pptseason) # merge temperature and precipitation data
###
poar_allsites.clim_season <- left_join(x = poar_allsites_2015_2016 ,y =poar_climseason,by=c("site","census.year","Longitude","Latitude")) # merge the demographic data with climatic data for each site
poar_allsites.clim_season %>%
filter(Season=="growing") %>%
mutate(tempgrow=temp_season,pptgrow=ppt_season)->poar_allsites.clim_season_grow
# head(poar_allsites.clim_season_grow)
# head(poar_allsites.clim_season_dorm)
poar_allsites.clim_season %>%
filter(Season=="dormant") %>%
mutate(tempdorm=temp_season,pptdorm=ppt_season)->poar_allsites.clim_season_dorm
poar.clim_seasonal<- cbind(poar_allsites.clim_season_grow,tempdorm=poar_allsites.clim_season_dorm$tempdorm,pptdorm=poar_allsites.clim_season_dorm$pptdorm)
# poar.clim_seasonal$Longitude<-poar.clim_seasonal$Longitude.x
# poar.clim_seasonal$Latitude <-poar.clim_seasonal$Latitude.y
# poar.clim_seasonal %>%
#   mutate( pptgrow   = pptgrow %>% scale %>% .[,1],
#           tempgrow = tempgrow %>% scale %>% .[,1],
#           pptdorm = pptdorm %>% scale %>% .[,1],
#           tempdorm= tempdorm %>% scale %>% .[,1])->zpoar.clim_seasonal
#load stan output -- this will also take a while, but not as long as running the model from scratch
fit_survival <- readRDS(url("https://www.dropbox.com/s/ixv0rn7k6yi3bzm/poar_survival_season.rds?dl=1"))
fit_growth<-readRDS(url("https://www.dropbox.com/s/3h9x43ku3f58up9/poar_growth_season.rds?dl=1"))
fit_flow<-readRDS(url("https://www.dropbox.com/s/esq822z7cbie4os/poar_flow_season.rds?dl=1"))
fit_panicle<-readRDS(url("https://www.dropbox.com/scl/fi/f9stvvdpk9xh8xqv4ipas/poar_panicle_season.rds?rlkey=x5on1k5ildr3t2d0j7bt15e35&dl=1"))
fit_viability<-readRDS(url("https://www.dropbox.com/scl/fi/ig1c0vf2sxq2qmsncs9sm/poar_viability.rds?rlkey=73cvtqef95kmyq1637s1f2s0d&dl=1"))
POAU <- read.csv("https://www.dropbox.com/s/7f2yfz49fzrcp5i/POAU.csv?dl=1")
sdlg_surv <- POAU %>% filter(year_recruit==year_t,year_t %in% 2014:2016) %>% summarise(sdlg_surv = mean(spring_survival_t1,na.rm=T))
mean_coefs<- lapply(rstan::extract(fit_survival, pars = c("b0_s","bsizesex_s","btempdormpptdorm_s","btempgrowpptgrow_s","bsex_s", "bsize_s","bpptgrow_s","bpptdorm_s","btempgrow_s","btempdorm_s","bpptgrowsex_s","bpptdormsex_s","btempgrowsex_s","btempdormsex_s","btempdormpptdormsex_s","btempgrowpptgrowsex_s")) ,mean)
mean_coefg<- lapply(rstan::extract(fit_growth, pars = c("b0_g","btempdormpptdorm_g","btempgrowpptgrow_g","bsizesex_g","bsex_g", "bsize_g","bpptgrow_g","bpptdorm_g","btempgrow_g","btempdorm_g","bpptgrowsex_g","bpptdormsex_g","btempgrowsex_g","btempdormsex_g","btempdormpptdormsex_g","btempgrowpptgrowsex_g","sigma")) ,mean)
mean_coeff<- lapply(rstan::extract(fit_flow, pars = c("b0_f","bsizesex_f","bsex_f", "bsize_f","bpptgrow_f","bpptdorm_f","btempgrow_f","btempdorm_f","bpptgrowsex_f","bpptdormsex_f","btempgrowsex_f","btempdormsex_f","btempdormpptdorm_f","btempgrowpptgrow_f","btempdormpptdormsex_f","btempgrowpptgrowsex_f")) ,mean)
mean_coefp<- lapply(rstan::extract(fit_panicle, pars = c("b0_p","bsex_p","bsex_p","bsizesex_p", "bsize_p","bpptgrow_p","bpptdorm_p","btempgrow_p","btempdorm_p","bpptgrowsex_p","bpptdormsex_p","btempgrowsex_p","btempdormsex_p","btempdormpptdorm_p","btempgrowpptgrow_p","btempdormpptdormsex_p","btempgrowpptgrowsex_p")) ,mean)
mean_coefv<-lapply(rstan::extract(fit_viability, pars = c("v0","a_v","m","lambda_d")) ,mean)
F_params <- M_params <- c()
## survival
F_params$surv_mu <- mean_coefs$b0_s
F_params$surv_size <- mean_coefs$bsize_s
F_params$surv_pptgrow <- mean_coefs$bpptgrow_s
F_params$surv_pptdorm <- mean_coefs$bpptdorm_s
F_params$surv_tempgrow <- mean_coefs$btempgrow_s
F_params$surv_tempdorm <- mean_coefs$btempdorm_s
F_params$surv_tempdorm_pptdorm<-mean_coefs$btempdormpptdorm_s
F_params$surv_tempgrow_pptgrow<-mean_coefs$btempgrowpptgrow_s
M_params$surv_mu <- mean_coefs$b0_s + mean_coefs$bsex_s
M_params$surv_size <- mean_coefs$bsize_s + mean_coefs$bsizesex_s
M_params$surv_pptgrow <- mean_coefs$bpptgrow_s  + mean_coefs$bpptgrowsex_s
M_params$surv_pptdorm <- mean_coefs$bpptdorm_s  + mean_coefs$bpptdormsex_s
M_params$surv_tempgrow <- mean_coefs$btempgrow_s + mean_coefs$btempgrowsex_s #
M_params$surv_tempdorm <-  mean_coefs$btempdorm_s  + mean_coefs$btempdormsex_s
M_params$surv_tempdorm_pptdorm<-mean_coefs$btempdormpptdorm_s + mean_coefs$btempdormpptdormsex_s
M_params$surv_tempgrow_pptgrow<-mean_coefs$btempgrowpptgrow_s + mean_coefs$btempgrowpptgrowsex_s
## growth
F_params$grow_mu <- mean_coefg$b0_g
F_params$grow_size <- mean_coefg$bsize_g
F_params$grow_pptgrow <- mean_coefg$bpptgrow_g
F_params$grow_pptdorm <- mean_coefg$bpptdorm_g
F_params$grow_tempgrow <- mean_coefg$btempgrow_g
F_params$grow_tempdorm <- mean_coefg$btempdorm_g
F_params$grow_tempdorm_pptdorm<-mean_coefg$btempdormpptdorm_g
F_params$grow_tempgrow_pptgrow<-mean_coefg$btempgrowpptgrow_g
F_params$sigma_g <- mean_coefg$sigma
M_params$grow_mu <- mean_coefg$b0_g + mean_coefg$bsex_g
M_params$grow_size <- mean_coefg$bsize_g + mean_coefg$bsizesex_g
M_params$grow_pptgrow <- mean_coefg$bpptgrow_g  + mean_coefg$bpptgrowsex_g
M_params$grow_pptdorm <- mean_coefg$bpptdorm_g  + mean_coefg$bpptdormsex_g
M_params$grow_tempgrow <- mean_coefg$btempgrow_g + mean_coefg$btempgrowsex_g #
M_params$grow_tempdorm <-  mean_coefg$btempdorm_g  + mean_coefg$btempdormsex_g
M_params$grow_tempdorm_pptdorm<-mean_coefg$btempdormpptdorm_g + mean_coefg$btempdormpptdormsex_g
M_params$grow_tempgrow_pptgrow<-mean_coefg$btempgrowpptgrow_g + mean_coefg$btempgrowpptgrowsex_g
M_params$sigma_g <- mean_coefg$sigma
## flowering
F_params$flow_mu <- mean_coeff$b0_f
F_params$flow_size <- mean_coeff$bsize_f
F_params$flow_pptgrow <- mean_coeff$bpptgrow_f
F_params$flow_pptdorm <- mean_coeff$bpptdorm_f
F_params$flow_tempgrow <- mean_coeff$btempgrow_f
F_params$flow_tempdorm <- mean_coeff$btempdorm_f
F_params$flow_tempdorm_pptdorm<-mean_coeff$btempdormpptdorm_f
F_params$flow_tempgrow_pptgrow<-mean_coeff$btempgrowpptgrow_f
M_params$flow_mu <- mean_coeff$b0_f + mean_coeff$bsex_f
M_params$flow_size <- mean_coeff$bsize_f + mean_coeff$bsizesex_f
M_params$flow_pptgrow <- mean_coeff$bpptgrow_f  + mean_coeff$bpptgrowsex_f
M_params$flow_pptdorm <- mean_coeff$bpptdorm_f  + mean_coeff$bpptdormsex_f
M_params$flow_tempgrow <- mean_coeff$btempgrow_f + mean_coeff$btempgrowsex_f #
M_params$flow_tempdorm <-  mean_coeff$btempdorm_f  + mean_coeff$btempdormsex_f
M_params$flow_tempdorm_pptdorm<-mean_coeff$btempdormpptdorm_f + mean_coeff$btempdormpptdormsex_f
M_params$flow_tempgrow_pptgrow<-mean_coeff$btempgrowpptgrow_f + mean_coeff$btempgrowpptgrowsex_f
## panicles
F_params$panic_mu <- mean_coefp$b0_p
F_params$panic_size <- mean_coefp$bsize_p
F_params$panic_pptgrow <- mean_coefp$bpptgrow_p
F_params$panic_pptdorm <- mean_coefp$bpptdorm_p
F_params$panic_tempgrow <- mean_coefp$btempgrow_p
F_params$panic_tempdorm <- mean_coefp$btempdorm_p
F_params$panic_tempdorm_pptdorm<-mean_coefp$btempdormpptdorm_p
F_params$panic_tempgrow_pptgrow<-mean_coefp$btempgrowpptgrow_p
M_params$panic_mu <- mean_coefp$b0_p + mean_coefp$bsex_p
M_params$panic_size <- mean_coefp$bsize_p + mean_coefp$bsizesex_p
M_params$panic_pptgrow <- mean_coefp$bpptgrow_p  + mean_coefp$bpptgrowsex_p
M_params$panic_pptdorm <- mean_coefp$bpptdorm_p  + mean_coefp$bpptdormsex_p
M_params$panic_tempgrow <- mean_coefp$btempgrow_p + mean_coefp$btempgrowsex_p #
M_params$panic_tempdorm <-  mean_coefp$btempdorm_p  + mean_coefp$btempdormsex_p
M_params$panic_tempdorm_pptdorm<-mean_coefp$btempdormpptdorm_p + mean_coefp$btempdormpptdormsex_p
M_params$panic_tempgrow_pptgrow<-mean_coefp$btempgrowpptgrow_p + mean_coefp$btempgrowpptgrowsex_p
## seed viability and misc fertility params
F_params$v0 <- mean_coefv$v0
F_params$a_v <- mean_coefv$a_v
F_params$ov_per_inf <- mean_coefv$lambda_d
F_params$germ <- mean_coefv$m
F_params$PSR <- 0.5
## use POAU seedling survival for females and males
F_params$sdlg_surv <- M_params$sdlg_surv <- sdlg_surv$sdlg_surv
## set max size equal between the sexes
F_params$max_size <- M_params$max_size <- round(quantile(na.omit((poar.clim_seasonal$tillerN_t1)),probs=0.99))
F_params
poar.clim_seasonal %>%
subset( tillerN_t0 > 0 & tillerN_t1 > 0)%>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
group_by(site) %>%
summarise( Longitude=unique(Longitude),
Latitude=unique(Latitude),
mean_size = mean(tillerN_t1),
mean_pptgrow= mean(pptgrow),
mean_temprow= mean(tempgrow),
mean_pptdorm= mean(pptdorm),
mean_tempdorm= mean(tempdorm)
# pptgrow = unique(pptgrow),
# tempgrow = unique(tempgrow),
# pptdorm = unique(pptdorm),
# tempdorm = unique(tempdorm)
)->poarclim_seasonal.mean
poarclim_seasonal.mean$mean_pptgrow
# poarclim_seasonal.mean<-as.data.frame(poarclim_seasonal.mean)
## evaluate lambda at mean climate
## female-dominant:
max_yrs<-10
Fdom_meanclim_mat <- megamatrix_delay(F_params=F_params,
M_params=M_params,
twosex=F,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=mean(poarclim_seasonal.mean$mean_pptgrow),
tempgrow=mean(poarclim_seasonal.mean$mean_temprow),
pptdorm=mean(poarclim_seasonal.mean$mean_pptdorm),
tempdorm=mean(poarclim_seasonal.mean$mean_tempdorm),
rfx=rfx_fun())
# source("/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/twosexMPM.R")
source("/Users/jm200/Library/CloudStorage/Dropbox/Miller Lab/github/POAR-Forecasting/twosexMPMLTRE.R")
# source("C:/Users/tm9/Dropbox/github/POAR-Forecasting/twosexMPMLTRE.R")
Fdom_meanclim_mat <- megamatrix_delay(F_params=F_params,
M_params=M_params,
twosex=F,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=mean(poarclim_seasonal.mean$mean_pptgrow),
tempgrow=mean(poarclim_seasonal.mean$mean_temprow),
pptdorm=mean(poarclim_seasonal.mean$mean_pptdorm),
tempdorm=mean(poarclim_seasonal.mean$mean_tempdorm),
rfx=rfx_fun())
popbio::lambda(Fdom_meanclim_mat$MEGAmat) ## this is unrealistically high
twosex_meanclim_mat <- lambdaSim_delay( F_params=F_params,
M_params=M_params,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=mean(poarclim_seasonal.mean$mean_pptgrow),
tempgrow=mean(poarclim_seasonal.mean$mean_temprow),
pptdorm=mean(poarclim_seasonal.mean$mean_pptdorm),
tempdorm=mean(poarclim_seasonal.mean$mean_tempdorm),
max.yrs = max_yrs,
rfx = rfx_fun())
twosex_meanclim_mat$lambdatracker[max_yrs]
twosex_meanclim_mat$SRtracker[max_yrs]
twosex_meanclim_mat$n0[max_yrs]
twosex_meanclim_mat$lambdatracker
SRtracker
twosex_meanclim_mat$SRtracker
twosex_meanclim_mat$n0
lambdatracker
F_params=F_params
M_params=M_params
grow_perturb=0
surv_perturb=0
flow_perturb=0
fert_perturb=0
viab_perturb=0
pptgrow=mean(poarclim_seasonal.mean$mean_pptgrow)
tempgrow=mean(poarclim_seasonal.mean$mean_temprow)
pptdorm=mean(poarclim_seasonal.mean$mean_pptdorm)
tempdorm=mean(poarclim_seasonal.mean$mean_tempdorm)
max.yrs = max_yrs
rfx = rfx_fun()
matdim<-F_params$max_size
y<-1:F_params$max_size
lambdatracker      <- rep(0,max.yrs)
OSRtracker   <- rep(0,max.yrs)
SRtracker   <- rep(0,max.yrs)
n0            <- rep(1/((matdim+1)*2),((matdim+1)*2))
lambdatracker
OSRtracker
SRtracker
n0
for(t in 1:max.yrs){
##Estimate panicle SR
flowering_females<-n0[2:(matdim+1)]*pfx(x=y,param=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,flow_perturb=flow_perturb) ## scalar multiplication to weight females by flowering prob
F_panicles<-flowering_females%*%nfx(x=y,param=F_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,fert_perturb=fert_perturb) ##Vector operation to sum female panicles
flowering_males<-n0[(matdim+3):((matdim+1)*2)]*pfx(x=y,param=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,flow_perturb=flow_perturb)
M_panicles<-flowering_males%*%nfx(x=y,param=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,rfx=rfx,fert_perturb=fert_perturb)
OSRtracker[t]<-F_panicles/(F_panicles+M_panicles) ##Panicle sex ratio (proportion female)
SRtracker[t]<-sum(n0[1:(matdim+1)])
#assmble matrix
MEGAmat<-megamatrix_delay(F_params=F_params,M_params=M_params,pptgrow=pptgrow,pptdorm=pptdorm,tempgrow=tempgrow,tempdorm=tempdorm,twosex=T,OSR=OSRtracker[t],rfx=rfx,
grow_perturb=grow_perturb,surv_perturb=surv_perturb,flow_perturb=flow_perturb,fert_perturb=fert_perturb,viab_perturb=viab_perturb
)$MEGAmat
n0 <- MEGAmat[,] %*% n0
N  <- sum(n0)
lambdatracker[t]<-N
n0 <-n0/N
}
popbio::lambda(MEGAmat)
flowering_females
F_panicles
flowering_males
M_panicles
OSRtracker
SRtracker
lambda_growppt_mean<-lambda_growppt_mean_2sex<-SR_growppt_mean<-OSR_growppt_mean<-c()
ssd<-matrix(NA,(F_params$max_size+1)*2,nrow(climat_grow))
max_yrs <- 10
poarclim_seasonal.mean
ssd<-matrix(NA,(F_params$max_size+1)*2,nrow(poarclim_seasonal.mean))
mean(poarclim_seasonal.mean$mean_temprow)
ssdppt<-matrix(NA,(F_params$max_size+1)*2,nrow(poarclim_seasonal.mean))
for (i in 1:nrow(poarclim_seasonal.mean)) {
}
for (i in 1:nrow(poarclim_seasonal.mean)){
#linear model for comparison
mat <- megamatrix_delay( F_params=F_params,
M_params=M_params,
twosex=F,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=poarclim_seasonal.mean[i,1],
tempgrow=mean(poarclim_seasonal.mean$mean_temprow),
pptdorm=mean(poarclim_seasonal.mean$mean_pptdorm),
tempdorm=mean(poarclim_seasonal.mean$mean_tempdorm),
rfx=rfx_fun())$MEGAmat
lambda_growppt_mean[i] <- popbio::lambda(mat)
# 2-sex model
lambda_run <- lambdaSim_delay( F_params=F_params,
M_params=M_params,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=poarclim_seasonal.mean[i,1],
tempgrow=mean(poarclim_seasonal.mean$mean_temprow),
pptdorm=mean(poarclim_seasonal.mean$mean_pptdorm),
tempdorm=mean(poarclim_seasonal.mean$mean_tempdorm),
rfx = rfx_fun(),
max.yrs = max_yrs)
lambda_growppt_mean_2sex[i] <- lambda_run$lambdatracker[max_yrs]
SR_growppt_mean[i] <- lambda_run$SRtracker[max_yrs]
OSR_growppt_mean[i] <- lambda_run$OSRtracker[max_yrs]
ssdppt[,i] <- lambda_run$n0
}
poarclim_seasonal.mean
poar.clim_seasonal %>%
subset( tillerN_t0 > 0 & tillerN_t1 > 0)%>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
group_by(site) %>%
summarise( Longitude=unique(Longitude),
Latitude=unique(Latitude),
size = mean(tillerN_t1),
pptgrow= mean(pptgrow),
temprow= mean(tempgrow),
pptdorm= mean(pptdorm),
tempdorm= mean(tempdorm)) %>%
mutate( mean_size = mean(size))->poarclim_seasonal.mean
poar.clim_seasonal %>%
subset( tillerN_t0 > 0 & tillerN_t1 > 0)%>%
mutate( site         = site %>% as.factor %>% as.numeric,
Block = Block %>% as.factor %>% as.numeric,
Sex          = Sex %>% as.factor %>% as.numeric,
source = Code %>% as.factor %>% as.numeric ) %>%
group_by(site) %>%
summarise( Longitude=unique(Longitude),
Latitude=unique(Latitude),
size = mean(tillerN_t1),
pptgrow= mean(pptgrow),
temprow= mean(tempgrow),
pptdorm= mean(pptdorm),
tempdorm= mean(tempdorm))->poarclim_seasonal.mean
poarclim_seasonal.mean
poarclim_seasonal.mean$mean_size<-(mean(poarclim_seasonal.mean$size),nrow(poarclim_seasonal.mean))
climmean<- data.frame(mean_size=rep(mean(poarclim_seasonal.mean$size),nrow(poarclim_seasonal.mean)),pptgrow=rep(mean(poarclim_seasonal.mean$pptgrow),nrow(poarclim_seasonal.mean)),temprow=rep(mean(poarclim_seasonal.mean$temprow),nrow(poarclim_seasonal.mean)),pptdorm_mean=rep(mean(poarclim_seasonal.mean$pptdorm),nrow(poarclim_seasonal.mean)),tempdorm_mean=rep(mean(poarclim_seasonal.mean$tempdorm),nrow(poarclim_seasonal.mean)))
climmean
poarclim_seasonal.meanplot<-data.frame(poarclim_seasonal.mean,climmean)
poarclim_seasonal.meanplot
climmean<- data.frame(mean_size=rep(mean(poarclim_seasonal.mean$size),nrow(poarclim_seasonal.mean)),mean_pptgrow=rep(mean(poarclim_seasonal.mean$pptgrow),nrow(poarclim_seasonal.mean)),mean_temprow=rep(mean(poarclim_seasonal.mean$temprow),nrow(poarclim_seasonal.mean)),pptdorm_mean=rep(mean(poarclim_seasonal.mean$pptdorm),nrow(poarclim_seasonal.mean)),tempdorm_mean=rep(mean(poarclim_seasonal.mean$tempdorm),nrow(poarclim_seasonal.mean)))
poarclim_seasonal.meanplot<-data.frame(poarclim_seasonal.mean,climmean)
poarclim_seasonal.meanplot
climmean<- data.frame(mean_size=rep(mean(poarclim_seasonal.mean$size),nrow(poarclim_seasonal.mean)),mean_pptgrow=rep(mean(poarclim_seasonal.mean$pptgrow),nrow(poarclim_seasonal.mean)),mean_temprow=rep(mean(poarclim_seasonal.mean$temprow),nrow(poarclim_seasonal.mean)),mean_pptdorm=rep(mean(poarclim_seasonal.mean$pptdorm),nrow(poarclim_seasonal.mean)),mean_tempdorm=rep(mean(poarclim_seasonal.mean$tempdorm),nrow(poarclim_seasonal.mean)))
climmean
poarclim_seasonal.meanplot<-data.frame(poarclim_seasonal.mean,climmean)
poarclim_seasonal.meanplot
lambda_growppt_mean<-lambda_growppt_mean_2sex<-SR_growppt_mean<-OSR_growppt_mean<-c()
ssdppt<-matrix(NA,(F_params$max_size+1)*2,nrow(poarclim_seasonal.mean))
max_yrs <- 10
poarclim_seasonal.meanplot[,5]
poarclim_seasonal.meanplot[,11]
poarclim_seasonal.meanplot[,12]
for (i in 1:nrow(poarclim_seasonal.meanplot)){
#linear model for comparison
mat <- megamatrix_delay( F_params=F_params,
M_params=M_params,
twosex=F,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=poarclim_seasonal.meanplot[i,5],
tempgrow=poarclim_seasonal.meanplot[i,11],
pptdorm=poarclim_seasonal.meanplot[i,12],
tempdorm=poarclim_seasonal.meanplot[i,13],
rfx=rfx_fun())$MEGAmat
lambda_growppt_mean[i] <- popbio::lambda(mat)
# 2-sex model
lambda_run <- lambdaSim_delay( F_params=F_params,
M_params=M_params,
grow_perturb=0,
surv_perturb=0,
flow_perturb=0,
fert_perturb=0,
viab_perturb=0,
pptgrow=poarclim_seasonal.meanplot[i,5],
tempgrow=poarclim_seasonal.meanplot[i,11],
pptdorm=poarclim_seasonal.meanplot[i,12],
tempdorm=poarclim_seasonal.meanplot[i,13],
rfx = rfx_fun(),
max.yrs = max_yrs)
lambda_growppt_mean_2sex[i] <- lambda_run$lambdatracker[max_yrs]
SR_growppt_mean[i] <- lambda_run$SRtracker[max_yrs]
OSR_growppt_mean[i] <- lambda_run$OSRtracker[max_yrs]
ssdppt[,i] <- lambda_run$n0
}
poarclim_seasonal.meanplot
